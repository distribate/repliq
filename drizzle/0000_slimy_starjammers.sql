-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TYPE "public"."comments_parent_type" AS ENUM('thread', 'post');--> statement-breakpoint
CREATE TYPE "public"."donate_variants" AS ENUM('default', 'authentic', 'helper', 'loyal', 'arkhont', 'dev', 'moder');--> statement-breakpoint
CREATE TYPE "public"."issue_type" AS ENUM('bug', 'suggestion', 'game');--> statement-breakpoint
CREATE TYPE "public"."post_visibility" AS ENUM('all', 'only', 'friends');--> statement-breakpoint
CREATE TYPE "public"."profile_visibility" AS ENUM('all', 'friends');--> statement-breakpoint
CREATE TYPE "public"."report_reason" AS ENUM('spam', 'offensive', 'dont-like');--> statement-breakpoint
CREATE TYPE "public"."report_type" AS ENUM('comment', 'post', 'thread', 'account');--> statement-breakpoint
CREATE TYPE "public"."request_timeout_type" AS ENUM('description', 'favorite_item', 'real_name', 'name_color');--> statement-breakpoint
CREATE TYPE "public"."thread_rating_type" AS ENUM('decrement', 'increment');--> statement-breakpoint
CREATE TYPE "public"."user_account_status" AS ENUM('deleted', 'archived');--> statement-breakpoint
CREATE SEQUENCE "public"."admins_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."category_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."config_alerts_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."config_minecraft_items_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."info_findout_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."reports_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."threads_images_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."threads_rating_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."threads_tags_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."users_banned_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE SEQUENCE "public"."users_blocked_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1;--> statement-breakpoint
CREATE TABLE "rules_rule_content" (
	"id" serial PRIMARY KEY NOT NULL,
	"rule_list_id" text,
	"title" text NOT NULL,
	"punishment" text,
	"description" text,
	"subtitle" text
);
--> statement-breakpoint
ALTER TABLE "rules_rule_content" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "news" (
	"id" uuid PRIMARY KEY DEFAULT uuid_generate_v1() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"title" text NOT NULL,
	"description" text NOT NULL,
	"media_links" jsonb,
	"tags" text[],
	"imageUrl" text DEFAULT '''/news/art-bzzvanet.jpg'' NOT NULL
);
--> statement-breakpoint
ALTER TABLE "news" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "rules_termin_content" (
	"id" serial PRIMARY KEY NOT NULL,
	"article_title" text NOT NULL,
	"article_desc" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "rules_termin_content" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "events" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "events_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"title" text NOT NULL,
	"description" text,
	"imageUrl" text,
	"reward" text NOT NULL,
	"origin" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "events" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_game_status" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_game_status_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"nickname" text NOT NULL,
	"status" text NOT NULL,
	"joined" timestamp with time zone,
	"quited" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "users_game_status" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_settings" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_settings_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" uuid NOT NULL,
	"cover_outline_visible" boolean DEFAULT true NOT NULL,
	"accept_friend_request" boolean DEFAULT true NOT NULL,
	"real_name_visible" boolean DEFAULT true NOT NULL,
	"game_stats_visible" boolean DEFAULT true NOT NULL,
	"profile_visibility" "profile_visibility" DEFAULT 'all' NOT NULL,
	"nickname" text NOT NULL,
	"send_notifications" boolean DEFAULT true NOT NULL,
	"show_game_location" boolean DEFAULT true NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_settings" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_actions" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_actions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"source_nickname" text NOT NULL,
	"target_nickname" text NOT NULL,
	"type" text NOT NULL,
	"uuid" text NOT NULL,
	"description" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_actions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "notifications" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "notifications_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"nickname" text NOT NULL,
	"message" text NOT NULL,
	"read" boolean DEFAULT false NOT NULL,
	"type" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "notifications" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "voted_users" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "voted_users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"nickname" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "voted_users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_status" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_status_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"nickname" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_status" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "minecraft_profiles" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"nickname" text NOT NULL,
	"uuid" text NOT NULL,
	"profile_id" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "minecraft_profiles" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "permissions" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "permissions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"donate" "donate_variants" NOT NULL,
	"permission" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "permissions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "refferals" (
	"id" uuid DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"completed" boolean DEFAULT false NOT NULL
);
--> statement-breakpoint
ALTER TABLE "refferals" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "issues_approvals" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "issues_approvals_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"responser" text DEFAULT 'DEFAULT',
	"message" text,
	"issue_id" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "issues_approvals" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_main" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_main_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"name" text NOT NULL,
	"hash" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_main" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "reports_approvals" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "report_approvals_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"report_id" bigint NOT NULL,
	"status" text NOT NULL,
	"message" text
);
--> statement-breakpoint
ALTER TABLE "reports_approvals" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_punish" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_punish_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"nickname" text NOT NULL,
	"type" text NOT NULL,
	"initiator" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_punish" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "modpack" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "landing_modpack_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"name" text,
	"client" text,
	"version" text,
	"mods" text[],
	"imageUrl" text DEFAULT '/modpacks/art-bzzvanet.jpg' NOT NULL,
	"downloadLink" text,
	"shaders" text[]
);
--> statement-breakpoint
ALTER TABLE "modpack" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "currencies" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "landing_currencies_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"title" text NOT NULL,
	"imageUrl" text NOT NULL,
	"value" text NOT NULL,
	"isAvailable" boolean DEFAULT true NOT NULL,
	"public" boolean DEFAULT true NOT NULL
);
--> statement-breakpoint
ALTER TABLE "currencies" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "errors_log" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "errors_log_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"type" text NOT NULL,
	"description" text NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "errors_log" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "ip_list" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "ip_list_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"ip" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "ip_list" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "events_players" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "events_accepted_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"event_id" bigint NOT NULL,
	"nickname" text NOT NULL,
	"status" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "events_players" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_profiles" (
	"user_id" uuid NOT NULL,
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_profiles_idd_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"type" text DEFAULT '' NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_profiles" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "issues" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_nickname" text NOT NULL,
	"title" text NOT NULL,
	"description" text NOT NULL,
	"type" "issue_type" NOT NULL,
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "issues_asd_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1)
);
--> statement-breakpoint
ALTER TABLE "issues" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_credentials" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "users_credentials_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_id" uuid NOT NULL,
	"hash" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_credentials" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "links" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "links_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"value" text NOT NULL,
	"link" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "links" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "comments" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "comments_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"parent_id" uuid NOT NULL,
	"parent_type" "comments_parent_type" NOT NULL,
	"content" text NOT NULL,
	"user_nickname" text NOT NULL,
	"is_updated" boolean DEFAULT false NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "comments" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "comments_replies" (
	"id" bigint GENERATED BY DEFAULT AS IDENTITY (sequence name "comments_replies_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"initiator_comment_id" bigint NOT NULL,
	"recipient_comment_id" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "comments_replies" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "admins" (
	"user_id" uuid NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "admins_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"telegram_id" bigint,
	"nickname" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "admins" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "category" (
	"available" boolean DEFAULT true NOT NULL,
	"description" text,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "category_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"title" text NOT NULL,
	"emoji" text NOT NULL,
	"color" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "category" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "config_advertisement" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"description" text NOT NULL,
	"id" bigint PRIMARY KEY NOT NULL,
	"link" text,
	"owner" text NOT NULL,
	"title" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "config_advertisement" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "config_alerts" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "config_alerts_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"link" text,
	"title" text NOT NULL,
	"creator" text NOT NULL,
	"description" text,
	CONSTRAINT "config_alerts_description_check" CHECK (length(description) < 256),
	CONSTRAINT "config_alerts_title_check" CHECK (length(title) < 100)
);
--> statement-breakpoint
ALTER TABLE "config_alerts" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "config_minecraft_facts" (
	"fact" text,
	"id" bigint PRIMARY KEY NOT NULL
);
--> statement-breakpoint
ALTER TABLE "config_minecraft_facts" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "config_minecraft_items" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "config_minecraft_items_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"image" text NOT NULL,
	"title" text NOT NULL,
	"description" text
);
--> statement-breakpoint
ALTER TABLE "config_minecraft_items" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "friends_notes" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"note" text NOT NULL,
	"friend_id" uuid NOT NULL,
	CONSTRAINT "friends_notes_note_check" CHECK (length(note) < 32)
);
--> statement-breakpoint
ALTER TABLE "friends_notes" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "friends_pinned" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"friend_id" uuid NOT NULL
);
--> statement-breakpoint
ALTER TABLE "friends_pinned" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "info_findout" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "info_findout_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"findout" text NOT NULL,
	"user_nickname" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "info_findout" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "friends_requests" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "friends_requests" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "posts_views" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "posts_views_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"post_id" uuid NOT NULL,
	"nickname" text NOT NULL,
	CONSTRAINT "posts_views_post_user_unique" UNIQUE("post_id","nickname")
);
--> statement-breakpoint
ALTER TABLE "posts_views" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "moderators" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "moderators_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_id" uuid
);
--> statement-breakpoint
ALTER TABLE "moderators" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "posts" (
	"isComments" boolean DEFAULT true NOT NULL,
	"content" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"visibility" "post_visibility" DEFAULT 'all' NOT NULL,
	"isUpdated" boolean DEFAULT false NOT NULL,
	"isPinned" boolean DEFAULT false NOT NULL
);
--> statement-breakpoint
ALTER TABLE "posts" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "posts_comments" (
	"content" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_nickname" text NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "posts_comments_id_seq1" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"post_id" uuid NOT NULL
);
--> statement-breakpoint
ALTER TABLE "posts_comments" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "profile_views" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "profile_views_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"resolved" boolean DEFAULT false NOT NULL,
	"response" text DEFAULT 'NULL'
);
--> statement-breakpoint
ALTER TABLE "profile_views" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "status" (
	"user_id" text PRIMARY KEY NOT NULL,
	"value" boolean DEFAULT true NOT NULL
);
--> statement-breakpoint
ALTER TABLE "status" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "reports" (
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "reports_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"reason" "report_reason" DEFAULT 'spam' NOT NULL,
	"report_type" "report_type",
	"reported_item" jsonb,
	"target_user_nickname" text NOT NULL,
	"user_nickname" text NOT NULL,
	"description" text
);
--> statement-breakpoint
ALTER TABLE "reports" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_pinned" (
	"id" bigint PRIMARY KEY NOT NULL,
	"thread_id" uuid NOT NULL
);
--> statement-breakpoint
ALTER TABLE "threads_pinned" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_reactions" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "threads_rating_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"thread_id" uuid NOT NULL,
	"user_nickname" text NOT NULL,
	"emoji" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "threads_reactions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_images" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "threads_images_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"image_url" text NOT NULL,
	"thread_id" uuid NOT NULL
);
--> statement-breakpoint
ALTER TABLE "threads_images" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"title" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone,
	"visibility" "post_visibility" DEFAULT 'all',
	"description" text,
	"is_comments" boolean DEFAULT true NOT NULL,
	"permission" boolean DEFAULT false NOT NULL,
	"is_updated" boolean DEFAULT false NOT NULL,
	"category_id" bigint NOT NULL,
	"content" jsonb NOT NULL,
	"href" text NOT NULL,
	CONSTRAINT "threads_href_key" UNIQUE("href"),
	CONSTRAINT "threads_title_check" CHECK (length(title) < 200)
);
--> statement-breakpoint
ALTER TABLE "threads" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_views" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "threads_views_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"thread_id" uuid NOT NULL,
	"user_nickname" text NOT NULL,
	CONSTRAINT "threads_views_thread_user_unique" UNIQUE("thread_id","user_nickname")
);
--> statement-breakpoint
ALTER TABLE "threads_views" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_tags" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "threads_tags_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"tags" text[] NOT NULL,
	"thread_id" uuid NOT NULL
);
--> statement-breakpoint
ALTER TABLE "threads_tags" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users" (
	"birthday" date,
	"cover_image" text,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"description" text,
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"name_color" text DEFAULT '#ffffff' NOT NULL,
	"nickname" text NOT NULL,
	"real_name" text,
	"favorite_item" bigint,
	"donate" "donate_variants" DEFAULT 'default' NOT NULL,
	"account_status" "user_account_status",
	"avatar" text,
	CONSTRAINT "users_nickname_key" UNIQUE("nickname"),
	CONSTRAINT "users_description_check" CHECK (length(description) < 64)
);
--> statement-breakpoint
ALTER TABLE "users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_banned" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_banned_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"nickname" text NOT NULL,
	"reason" text,
	"time" timestamp with time zone NOT NULL,
	"created_at" timestamp with time zone DEFAULT now()
);
--> statement-breakpoint
ALTER TABLE "users_banned" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_friends" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"user_1" text NOT NULL,
	"user_2" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "user_pair_check" CHECK (user_1 <> user_2)
);
--> statement-breakpoint
ALTER TABLE "users_friends" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_blocked" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_blocked_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"initiator" text NOT NULL,
	"recipient" text NOT NULL,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
	"message" text
);
--> statement-breakpoint
ALTER TABLE "users_blocked" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_saved_threads" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_id" uuid,
	"thread_id" uuid
);
--> statement-breakpoint
ALTER TABLE "users_saved_threads" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_security" (
	"email" varchar PRIMARY KEY NOT NULL,
	"token" varchar,
	"user_nickname" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "users_security" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users_session" (
	"session_id" text PRIMARY KEY NOT NULL,
	"expires_at" timestamp with time zone NOT NULL,
	"browser" text,
	"cpu" text,
	"ip" text NOT NULL,
	"os" text,
	"ua" text,
	"nickname" text NOT NULL,
	"device" text,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"token" text NOT NULL,
	"location" text DEFAULT '' NOT NULL,
	CONSTRAINT "users_session_session_id_key" UNIQUE("session_id")
);
--> statement-breakpoint
ALTER TABLE "users_session" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "posts_users" (
	"post_id" uuid NOT NULL,
	"nickname" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "posts_users_pkey" PRIMARY KEY("post_id","nickname")
);
--> statement-breakpoint
ALTER TABLE "posts_users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "threads_users" (
	"thread_id" uuid NOT NULL,
	"user_nickname" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "threads_users_pkey" PRIMARY KEY("thread_id","user_nickname")
);
--> statement-breakpoint
ALTER TABLE "threads_users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "users_game_status" ADD CONSTRAINT "users_game_status_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_settings" ADD CONSTRAINT "users_settings_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_settings" ADD CONSTRAINT "users_settings_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "notifications" ADD CONSTRAINT "notifications_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_status" ADD CONSTRAINT "users_status_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "minecraft_profiles" ADD CONSTRAINT "minecraft_profiles_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."users_profiles"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "refferals" ADD CONSTRAINT "refferals_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "refferals" ADD CONSTRAINT "refferals_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "issues_approvals" ADD CONSTRAINT "issues_approvals_issue_id_fkey" FOREIGN KEY ("issue_id") REFERENCES "public"."issues"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "issues_approvals" ADD CONSTRAINT "issues_approvals_responser_fkey" FOREIGN KEY ("responser") REFERENCES "public"."users"("nickname") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "reports_approvals" ADD CONSTRAINT "report_approvals_report_id_fkey" FOREIGN KEY ("report_id") REFERENCES "public"."reports"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_punish" ADD CONSTRAINT "users_punish_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_punish" ADD CONSTRAINT "users_punish_nickname_fkey1" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "events_players" ADD CONSTRAINT "events_accepted_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."events"("id") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_profiles" ADD CONSTRAINT "users_profiles_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "issues" ADD CONSTRAINT "issues_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_credentials" ADD CONSTRAINT "users_credentials_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "comments" ADD CONSTRAINT "comments_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "comments_replies" ADD CONSTRAINT "comments_replies_initiator_comment_id_fkey" FOREIGN KEY ("initiator_comment_id") REFERENCES "public"."comments"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "comments_replies" ADD CONSTRAINT "comments_replies_recipient_comment_id_fkey" FOREIGN KEY ("recipient_comment_id") REFERENCES "public"."comments"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "admins" ADD CONSTRAINT "admins_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "admins" ADD CONSTRAINT "admins_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "config_alerts" ADD CONSTRAINT "config_alerts_creator_fkey" FOREIGN KEY ("creator") REFERENCES "public"."users"("nickname") ON DELETE no action ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_notes" ADD CONSTRAINT "friends_notes_friend_id_fkey" FOREIGN KEY ("friend_id") REFERENCES "public"."users_friends"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_notes" ADD CONSTRAINT "friends_notes_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_notes" ADD CONSTRAINT "friends_notes_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_pinned" ADD CONSTRAINT "friends_pinned_friend_id_fkey" FOREIGN KEY ("friend_id") REFERENCES "public"."users_friends"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_pinned" ADD CONSTRAINT "friends_pinned_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_pinned" ADD CONSTRAINT "friends_pinned_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "info_findout" ADD CONSTRAINT "info_findout_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_requests" ADD CONSTRAINT "friends_requests_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "friends_requests" ADD CONSTRAINT "friends_requests_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_views" ADD CONSTRAINT "posts_views_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_views" ADD CONSTRAINT "posts_views_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "moderators" ADD CONSTRAINT "moderators_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_comments" ADD CONSTRAINT "p_comments_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_comments" ADD CONSTRAINT "posts_comments_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "profile_views" ADD CONSTRAINT "profile_views_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "profile_views" ADD CONSTRAINT "profile_views_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "reports" ADD CONSTRAINT "reports_target_user_nickname_fkey" FOREIGN KEY ("target_user_nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "reports" ADD CONSTRAINT "reports_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_pinned" ADD CONSTRAINT "threads_pinned_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_reactions" ADD CONSTRAINT "threads_rating_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_reactions" ADD CONSTRAINT "threads_rating_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_images" ADD CONSTRAINT "threads_images_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads" ADD CONSTRAINT "threads_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "public"."category"("id") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_views" ADD CONSTRAINT "threads_views_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_views" ADD CONSTRAINT "threads_views_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_tags" ADD CONSTRAINT "threads_tags_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users" ADD CONSTRAINT "users_favorite_item_fkey" FOREIGN KEY ("favorite_item") REFERENCES "public"."config_minecraft_items"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "users_banned" ADD CONSTRAINT "users_banned_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_friends" ADD CONSTRAINT "users_friends_user_1_fkey" FOREIGN KEY ("user_1") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_friends" ADD CONSTRAINT "users_friends_user_2_fkey" FOREIGN KEY ("user_2") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_blocked" ADD CONSTRAINT "users_blocked_initiator_fkey" FOREIGN KEY ("initiator") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_blocked" ADD CONSTRAINT "users_blocked_recipient_fkey" FOREIGN KEY ("recipient") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_saved_threads" ADD CONSTRAINT "users_saved_threads_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_saved_threads" ADD CONSTRAINT "users_saved_threads_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_security" ADD CONSTRAINT "users_security_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users_session" ADD CONSTRAINT "users_session_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_users" ADD CONSTRAINT "posts_users_nickname_fkey" FOREIGN KEY ("nickname") REFERENCES "public"."users"("nickname") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "posts_users" ADD CONSTRAINT "posts_users_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_users" ADD CONSTRAINT "threads_users_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "threads_users" ADD CONSTRAINT "threads_users_user_nickname_fkey" FOREIGN KEY ("user_nickname") REFERENCES "public"."users"("nickname") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE UNIQUE INDEX "users_game_status_nickname_idx" ON "users_game_status" USING btree ("nickname" text_ops);--> statement-breakpoint
CREATE INDEX "idx_users_settings_nickname" ON "users_settings" USING btree ("nickname" text_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "friends_notes_unique_idx" ON "friends_notes" USING btree ("friend_id" text_ops,"initiator" uuid_ops,"recipient" uuid_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "unique_recipient_initiator_pair" ON "friends_requests" USING btree (LEAST(recipient, initiator) text_ops,GREATEST(recipient, initiator) text_ops);--> statement-breakpoint
CREATE INDEX "idx_created_at" ON "profile_views" USING btree ("created_at" timestamptz_ops);--> statement-breakpoint
CREATE INDEX "idx_recipient" ON "profile_views" USING btree ("recipient" text_ops);--> statement-breakpoint
CREATE INDEX "profile_views_initiator_recipient_idx" ON "profile_views" USING btree ("initiator" text_ops,"recipient" text_ops,"created_at" text_ops);--> statement-breakpoint
CREATE INDEX "profile_views_recipient_initiator_idx" ON "profile_views" USING btree ("recipient" timestamptz_ops,"initiator" timestamptz_ops,"created_at" text_ops);--> statement-breakpoint
CREATE INDEX "threads_images_thread_id_idx" ON "threads_images" USING btree ("thread_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "threads_views_thread_id_idx" ON "threads_views" USING btree ("thread_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "threads_views_user_nickname_idx" ON "threads_views" USING btree ("user_nickname" text_ops);--> statement-breakpoint
CREATE INDEX "threads_tags_tags_idx" ON "threads_tags" USING gin ("tags" array_ops);--> statement-breakpoint
CREATE INDEX "threads_tags_thread_id_idx" ON "threads_tags" USING btree ("thread_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_users_created_at" ON "users" USING btree ("created_at" timestamptz_ops);--> statement-breakpoint
CREATE INDEX "idx_users_nickname" ON "users" USING btree ("nickname" text_ops);--> statement-breakpoint
CREATE INDEX "idx_sort_created_at" ON "users_friends" USING btree ("created_at" timestamptz_ops);--> statement-breakpoint
CREATE INDEX "idx_user_1" ON "users_friends" USING btree ("user_1" text_ops);--> statement-breakpoint
CREATE INDEX "idx_user_2" ON "users_friends" USING btree ("user_2" text_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "unique_users_pair_idx" ON "users_friends" USING btree (LEAST(user_1, user_2) text_ops,GREATEST(user_1, user_2) text_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "unique_initiator_recipient_idx" ON "users_blocked" USING btree (LEAST(initiator, recipient) text_ops,GREATEST(initiator, recipient) text_ops);
*/