name: fasberry-external

services:
  luckperms-rest-api:
    image: ghcr.io/luckperms/rest-api
    environment:
      LUCKPERMS_STORAGE_METHOD: postgresql
      LUCKPERMS_DATA_ADDRESS: luckperms_db:5432
      LUCKPERMS_DATA_DATABASE: ${LUCKPERMS_POSTGRES_DB}
      LUCKPERMS_DATA_USERNAME: ${LUCKPERMS_POSTGRES_USER}
      LUCKPERMS_DATA_PASSWORD: ${LUCKPERMS_POSTGRES_PASSWORD}
      LUCKPERMS_REST_HTTP_PORT: ${LUCKPERMS_BACKEND_PORT}
      LUCKPERMS_REST_AUTH: true
      LUCKPERMS_MESSAGING_SERVICE: "NATS"
      LUCKPERMS_MESSAGING_SERVICE_ENABLE: true
      LUCKPERMS_MESSAGING_SERVICE_ADDRESS: nats:4222
      LUCKPERMS_REST_AUTH_KEYS: ${SECRET_TOKEN}
    ports:
      - "127.0.0.1:4000:${LUCKPERMS_BACKEND_PORT}"
    extra_hosts:
     - "shared-network:host-gateway"
    networks:
      - shared-network

  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"  # Web UI
      - "8600:8600/udp"
    command: "agent -server -client=0.0.0.0 -bootstrap-expect=1 -data-dir=/consul/data"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - vault_network
    restart: always
    volumes:
      - ./data/fasberry-external/consul/data:/consul/data
      - ./packages/config-consul/consul.hcl:/consul/config/consul.hcl

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    depends_on:
      - consul
    networks:
      - vault_network
    volumes:
      - ./packages/config-vault/vault.hcl:/vault/config/vault.hcl
    cap_add:
      - IPC_LOCK
    entrypoint: ["vault", "server", "-config=/vault/config/vault.hcl"]

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}" 
      - "${MINIO_CLIENT_PORT}:${MINIO_CLIENT_PORT}" 
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./data/fasberry-external/minio/data:/data
    command: server /data --console-address ":${MINIO_CLIENT_PORT}"

  # mc:
  #   image: minio/mc:latest
  #   container_name: minio-client
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     until (mc alias set myminio http://minio:${MINIO_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}); do
  #       echo 'Waiting for MinIO...';
  #       sleep 2;
  #     done;
  #     mc mb myminio/mybucket;
  #     "

  payments_db:
    container_name: payments_db
    image: postgres:15.1
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PAYMENTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PAYMENTS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PAYMENTS_POSTGRES_DB}
    ports:
      - ${PAYMENTS_POSTGRES_PORT}:5432/tcp
    volumes:
      - ./data/fasberry-external/payments-db/data:/var/lib/postgresql/data

  nats:
    container_name: nats
    image: nats:latest
    restart: unless-stopped
    ports:
      - "4222:4222"
    command: --T -VV
    volumes:
      - ./data/fasberry-external/nats/data:/nats
    networks:
      - shared-network

networks:
  shared-network:
    external: true
  vault_network:
    driver: bridge