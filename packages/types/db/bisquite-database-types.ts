/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface ADAPTDATA {
  DATA: string;
  UUID: string;
}

export interface Advancements {
  Key: string;
  Namespace: string;
  Progression: Generated<number>;
  TeamID: number;
}

export interface BetonquestBackpack {
  amount: number;
  id: Generated<number>;
  instruction: string;
  profileID: string;
}

export interface BetonquestGlobalPoints {
  category: string;
  count: number;
}

export interface BetonquestGlobalTags {
  tag: string;
}

export interface BetonquestJournal {
  date: Date;
  id: Generated<number>;
  pointer: string;
  profileID: string;
}

export interface BetonquestMigration {
  migration_id: number;
  namespace: string;
  time: Generated<Date | null>;
}

export interface BetonquestObjectives {
  instructions: string;
  objective: string;
  profileID: string;
}

export interface BetonquestPlayer {
  active_profile: string;
  conversation: Generated<string | null>;
  language: string;
  playerID: string;
}

export interface BetonquestPlayerProfile {
  name: string;
  playerID: string;
  profileID: string;
}

export interface BetonquestPoints {
  category: string;
  count: number;
  profileID: string;
}

export interface BetonquestProfile {
  profileID: string;
}

export interface BetonquestTags {
  profileID: string;
  tag: string;
}

export interface ChatControl {
  Data: Generated<string | null>;
  LastModified: Generated<number | null>;
  Name: Generated<string | null>;
  Nick: Generated<string | null>;
  UUID: string;
}

export interface ChatControlLog {
  ChannelName: Generated<string | null>;
  Content: Generated<string | null>;
  Date: Generated<Date | null>;
  Id: Generated<number>;
  Receiver: Generated<string | null>;
  RuleGroupName: Generated<string | null>;
  RuleName: Generated<string | null>;
  Sender: Generated<string | null>;
  Server: Generated<string | null>;
  Type: Generated<string | null>;
}

export interface ChatControlMail {
  Data: Generated<string | null>;
  UUID: string;
}

export interface CMIInventories {
  id: Generated<number>;
  inventories: Generated<string | null>;
  player_id: Generated<number | null>;
}

export interface CMIPlaytime {
  date: Generated<number | null>;
  h0: Generated<number | null>;
  h1: Generated<number | null>;
  h10: Generated<number | null>;
  h11: Generated<number | null>;
  h12: Generated<number | null>;
  h13: Generated<number | null>;
  h14: Generated<number | null>;
  h15: Generated<number | null>;
  h16: Generated<number | null>;
  h17: Generated<number | null>;
  h18: Generated<number | null>;
  h19: Generated<number | null>;
  h2: Generated<number | null>;
  h20: Generated<number | null>;
  h21: Generated<number | null>;
  h22: Generated<number | null>;
  h23: Generated<number | null>;
  h3: Generated<number | null>;
  h4: Generated<number | null>;
  h5: Generated<number | null>;
  h6: Generated<number | null>;
  h7: Generated<number | null>;
  h8: Generated<number | null>;
  h9: Generated<number | null>;
  id: Generated<number>;
  player_id: Generated<number | null>;
}

export interface CMIPlaytimereward {
  id: Generated<number>;
  onetime: Generated<string | null>;
  player_id: Generated<number | null>;
  repeatable: Generated<string | null>;
}

export interface CMIUsers {
  AFRecharge: Generated<string | null>;
  AlertReason: Generated<string | null>;
  AlertUntil: Generated<number | null>;
  Balance: Generated<number | null>;
  BannedAt: Generated<number | null>;
  BannedBy: Generated<string | null>;
  BannedUntil: Generated<number | null>;
  BanReason: Generated<string | null>;
  Charges: Generated<string | null>;
  ChatColor: Generated<string | null>;
  Collision: Generated<number | null>;
  Cooldowns: Generated<string | null>;
  Cuffed: Generated<number | null>;
  DeathLocation: Generated<string | null>;
  DisplayName: Generated<string | null>;
  Economy: Generated<string | null>;
  FakeAccount: Generated<number | null>;
  FlightCharge: Generated<number | null>;
  flightChargeEnabled: Generated<number | null>;
  Flying: Generated<number | null>;
  Glow: Generated<string | null>;
  Homes: Generated<string | null>;
  id: Generated<number>;
  Ignores: Generated<string | null>;
  Ips: Generated<string | null>;
  Jail: Generated<string | null>;
  JailedUntil: Generated<number | null>;
  JailReason: Generated<string | null>;
  JoinedCounter: Generated<number | null>;
  Kits: Generated<string | null>;
  LastLoginTime: Generated<number | null>;
  LastLogoffTime: Generated<number | null>;
  LockedIps: Generated<string | null>;
  LogOutLocation: Generated<string | null>;
  Mail: Generated<string | null>;
  Muted: Generated<string | null>;
  NameColor: Generated<string | null>;
  NamePrefix: Generated<string | null>;
  NameSuffix: Generated<string | null>;
  nickname: Generated<string | null>;
  Notes: Generated<string | null>;
  Options: Generated<string | null>;
  player_uuid: Generated<string | null>;
  PlaytimeOptimized: Generated<number | null>;
  pTime: Generated<number | null>;
  Rank: Generated<string | null>;
  Skin: Generated<string | null>;
  TeleportLocation: Generated<string | null>;
  tFly: Generated<number | null>;
  tGod: Generated<number | null>;
  TotalPlayTime: Generated<number | null>;
  UserMeta: Generated<string | null>;
  username: Generated<string | null>;
  Vanish: Generated<string | null>;
  Votifier: Generated<number | null>;
  Warnings: Generated<string | null>;
}

export interface INDEXMAPPING {
  BITMASK_INDEX: Generated<number | null>;
  ENTRY: Generated<string | null>;
}

export interface JobsArchive {
  experience: Generated<number | null>;
  id: Generated<number>;
  job: Generated<string | null>;
  jobid: Generated<number | null>;
  left: Generated<number | null>;
  level: Generated<number | null>;
  userid: Generated<number | null>;
}

export interface JobsBlocks {
  id: Generated<number>;
  recorded: Generated<number | null>;
  resets: Generated<number | null>;
  world: Generated<string | null>;
  worldid: Generated<number | null>;
  x: Generated<number | null>;
  y: Generated<number | null>;
  z: Generated<number | null>;
}

export interface JobsExploreData {
  chunkX: Generated<number | null>;
  chunkZ: Generated<number | null>;
  id: Generated<number>;
  playerNames: Generated<string | null>;
  worldid: Generated<number | null>;
  worldname: Generated<string | null>;
}

export interface JobsJobNames {
  id: Generated<number>;
  name: Generated<string | null>;
}

export interface JobsJobs {
  experience: Generated<number | null>;
  id: Generated<number>;
  job: Generated<string | null>;
  jobid: Generated<number | null>;
  level: Generated<number | null>;
  userid: Generated<number | null>;
}

export interface JobsLimits {
  collected: Generated<number | null>;
  id: Generated<number>;
  started: Generated<number | null>;
  type: Generated<string | null>;
  typeid: Generated<number | null>;
  userid: Generated<number | null>;
}

export interface JobsLog {
  action: Generated<string | null>;
  count: Generated<number | null>;
  exp: Generated<number | null>;
  id: Generated<number>;
  itemname: Generated<string | null>;
  money: Generated<number | null>;
  points: Generated<number | null>;
  time: Generated<number | null>;
  userid: Generated<number | null>;
}

export interface JobsPoints {
  currentpoints: Generated<number | null>;
  id: Generated<number>;
  totalpoints: Generated<number | null>;
  userid: Generated<number | null>;
}

export interface JobsUsers {
  donequests: Generated<number | null>;
  id: Generated<number>;
  player_uuid: Generated<string | null>;
  quests: Generated<string | null>;
  seen: Generated<number | null>;
  username: Generated<string | null>;
}

export interface JobsWorlds {
  id: Generated<number>;
  name: Generated<string | null>;
}

export interface LandsLands {
  area: string;
  balance: Generated<number>;
  category: Generated<string | null>;
  created_at: Date;
  icon: Generated<string | null>;
  inbox: Generated<string | null>;
  level: number;
  limits: Generated<string | null>;
  members: string;
  name: string;
  nation: Generated<string | null>;
  server: string;
  shield: Generated<number>;
  spawn: Generated<string | null>;
  stats: Generated<string | null>;
  storage: Generated<string | null>;
  title: Generated<string | null>;
  type: string;
  ulid: string;
  world: string;
}

export interface LandsLandsClaims {
  areas: Generated<string | null>;
  areas_amount: Generated<number | null>;
  blocks: Generated<string | null>;
  chunks: Generated<string | null>;
  chunks_amount: Generated<number | null>;
  land: string;
  world: string;
}

export interface LandsPlayers {
  chatmode: Generated<string | null>;
  edit_land: Generated<string | null>;
  flags: Generated<string | null>;
  invites: Generated<string | null>;
  limits: Generated<string | null>;
  name: string;
  uuid: string;
}

export interface LandsServers {
  flags: Generated<string | null>;
  last_seen: Date;
  server: string;
  timestamps: Generated<string | null>;
  version: string;
  version_prev: string;
}

export interface LandsWars {
  attacker: string;
  attacker_stats: string;
  defender: string;
  defender_stats: string;
  started_at: Date;
  tribute: Generated<number>;
}

export interface LandsWarsDeclarations {
  attacker: string;
  defender: string;
  mutual: Generated<Buffer>;
  preparation_time: Generated<number | null>;
  sent_at: Date;
  tribute: Generated<number>;
}

export interface LandsWorlds {
  flags_natural: Generated<string | null>;
  flags_role: Generated<string | null>;
  name: string;
  server: string;
  uid: string;
  ulid: string;
}

export interface McpetsPlayerData {
  data: Generated<string | null>;
  id: Generated<number>;
  inventories: Generated<string | null>;
  names: Generated<string | null>;
  uuid: Generated<string | null>;
}

export interface PlayerparticlesFixed {
  id: number;
  owner_uuid: string;
  particle_uuid: Generated<string | null>;
  pitch: Generated<number | null>;
  world: Generated<string | null>;
  xPos: Generated<number | null>;
  yaw: Generated<number | null>;
  yPos: Generated<number | null>;
  zPos: Generated<number | null>;
}

export interface PlayerparticlesGroup {
  name: Generated<string | null>;
  owner_uuid: Generated<string | null>;
  uuid: string;
}

export interface PlayerparticlesMigrations {
  migration_version: number;
}

export interface PlayerparticlesParticle {
  b: Generated<number | null>;
  b_end: Generated<number | null>;
  block_material: Generated<string | null>;
  duration: Generated<number | null>;
  effect: Generated<string | null>;
  g: Generated<number | null>;
  g_end: Generated<number | null>;
  group_uuid: Generated<string | null>;
  id: Generated<number | null>;
  item_material: Generated<string | null>;
  note: Generated<number | null>;
  r: Generated<number | null>;
  r_end: Generated<number | null>;
  style: Generated<string | null>;
  uuid: string;
}

export interface PlayerparticlesSettings {
  particles_hidden: Generated<number | null>;
  particles_hidden_self: Generated<number | null>;
  player_uuid: Generated<string | null>;
}

export interface PlayerpointsMigrations {
  migration_version: number;
}

export interface PlayerpointsPoints {
  id: Generated<number>;
  points: number;
  uuid: string;
}

export interface PlayerpointsUsernameCache {
  username: string;
  uuid: string;
}

export interface Players {
  Name: string;
  TeamID: number;
  UUID: string;
}

export interface TabGroups {
  group: Generated<string | null>;
  property: Generated<string | null>;
  server: Generated<string | null>;
  value: Generated<string | null>;
  world: Generated<string | null>;
}

export interface TabUsers {
  property: Generated<string | null>;
  server: Generated<string | null>;
  user: Generated<string | null>;
  value: Generated<string | null>;
  world: Generated<string | null>;
}

export interface Teams {
  ID: Generated<number>;
}

export interface Unredeemed {
  GiveRewards: number;
  Key: string;
  Namespace: string;
  TeamID: number;
}

export interface USELOCK {
  STATUS_LOCK: Generated<number | null>;
}

export interface USERPERFERENCES {
  HOLOGRAM: Generated<string | null>;
  ITEMDROP: Generated<string | null>;
  ITEMSTAND: Generated<string | null>;
  NAME: Generated<string | null>;
  UUID: Generated<string | null>;
}

export interface DB {
  ADAPT_DATA: ADAPTDATA;
  Advancements: Advancements;
  betonquest_backpack: BetonquestBackpack;
  betonquest_global_points: BetonquestGlobalPoints;
  betonquest_global_tags: BetonquestGlobalTags;
  betonquest_journal: BetonquestJournal;
  betonquest_migration: BetonquestMigration;
  betonquest_objectives: BetonquestObjectives;
  betonquest_player: BetonquestPlayer;
  betonquest_player_profile: BetonquestPlayerProfile;
  betonquest_points: BetonquestPoints;
  betonquest_profile: BetonquestProfile;
  betonquest_tags: BetonquestTags;
  ChatControl: ChatControl;
  ChatControl_Log: ChatControlLog;
  ChatControl_Mail: ChatControlMail;
  CMI_inventories: CMIInventories;
  CMI_playtime: CMIPlaytime;
  CMI_playtimereward: CMIPlaytimereward;
  CMI_users: CMIUsers;
  INDEX_MAPPING: INDEXMAPPING;
  jobs_archive: JobsArchive;
  jobs_blocks: JobsBlocks;
  jobs_exploreData: JobsExploreData;
  jobs_jobNames: JobsJobNames;
  jobs_jobs: JobsJobs;
  jobs_limits: JobsLimits;
  jobs_log: JobsLog;
  jobs_points: JobsPoints;
  jobs_users: JobsUsers;
  jobs_worlds: JobsWorlds;
  lands_lands: LandsLands;
  lands_lands_claims: LandsLandsClaims;
  lands_players: LandsPlayers;
  lands_servers: LandsServers;
  lands_wars: LandsWars;
  lands_wars_declarations: LandsWarsDeclarations;
  lands_worlds: LandsWorlds;
  mcpets_player_data: McpetsPlayerData;
  playerparticles_fixed: PlayerparticlesFixed;
  playerparticles_group: PlayerparticlesGroup;
  playerparticles_migrations: PlayerparticlesMigrations;
  playerparticles_particle: PlayerparticlesParticle;
  playerparticles_settings: PlayerparticlesSettings;
  playerpoints_migrations: PlayerpointsMigrations;
  playerpoints_points: PlayerpointsPoints;
  playerpoints_username_cache: PlayerpointsUsernameCache;
  Players: Players;
  tab_groups: TabGroups;
  tab_users: TabUsers;
  Teams: Teams;
  Unredeemed: Unredeemed;
  USE_LOCK: USELOCK;
  USER_PERFERENCES: USERPERFERENCES;
}
