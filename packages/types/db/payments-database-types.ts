/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type DonationType = "arkhont" | "authentic" | "loyal";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type PaymentStatus = "cancelled" | "captured" | "created" | "failed" | "received";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Payments {
  captured: Generated<boolean | null>;
  createdat: Generated<Timestamp | null>;
  currency: string;
  donate: DonationType;
  hash: string;
  id: Generated<string>;
  lt: Int8;
  nickname: string;
  orderid: string;
  price: Int8;
  status: PaymentStatus;
  wallet: string | null;
}

export interface DB {
  payments: Payments;
}
