/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type PaymentCryptoTonStatus = "cancelled" | "captured" | "created" | "failed" | "received";

export type PaymentStatus = "canceled" | "pending" | "succeeded" | "waitingForCapture";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Donate {
  commands: string[] | null;
  created_at: Generated<Timestamp>;
  description: string;
  forum: string[] | null;
  id: Int8;
  imageUrl: string;
  origin: string;
  price: Int8;
  rating: Int8;
  title: string;
}

export interface Economy {
  id: Int8;
  title: string | null;
  type: string;
  value: Int8;
}

export interface PaymentsCrypto {
  created_at: Generated<Timestamp | null>;
  currency: string;
  id: Generated<string>;
  nickname: string;
  orderid: string;
  payment_type: string;
  payment_value: string;
  price: Numeric;
  status: PaymentCryptoTonStatus;
}

export interface PaymentsFiat {
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  nickname: string;
  orderid: string;
  payment_type: string;
  payment_value: string;
  price: Int8;
  status: PaymentStatus;
}

export interface DB {
  donate: Donate;
  economy: Economy;
  payments_crypto: PaymentsCrypto;
  payments_fiat: PaymentsFiat;
}
