openapi: 3.0.1
info:
  title: standard public schema
  description: ""
  version: 12.0.1
externalDocs:
  description: PostgREST Documentation
  url: https://postgrest.org/en/v12.0/api.html
servers:
- url: http://0.0.0.0:3000/
paths:
  /:
    get:
      tags:
      - Introspection
      summary: OpenAPI description (this document)
      responses:
        "200":
          description: OK
          content: {}
  /posts_comments:
    get:
      tags:
      - posts_comments
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_comments'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_comments'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_comments'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_comments'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - posts_comments
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: posts_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts_comments'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: posts_comments
    delete:
      tags:
      - posts_comments
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - posts_comments
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: posts_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts_comments'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: posts_comments
  /users_status:
    get:
      tags:
      - users_status
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: status
        in: query
        schema:
          type: string
          format: boolean
      - name: user
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_status'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_status'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_status'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_status'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_status
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_status'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_status'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_status'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_status'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_status
    delete:
      tags:
      - users_status
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: status
        in: query
        schema:
          type: string
          format: boolean
      - name: user
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_status
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: status
        in: query
        schema:
          type: string
          format: boolean
      - name: user
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_status'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_status'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_status'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_status'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_status
  /luckperms_players:
    get:
      tags:
      - luckperms_players
      parameters:
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: username
        in: query
        schema:
          type: string
          format: character varying
      - name: primary_group
        in: query
        schema:
          type: string
          format: character varying
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_players'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_players'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_players'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_players'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_players
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_players
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_players'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_players
    delete:
      tags:
      - luckperms_players
      parameters:
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: username
        in: query
        schema:
          type: string
          format: character varying
      - name: primary_group
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_players
      parameters:
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: username
        in: query
        schema:
          type: string
          format: character varying
      - name: primary_group
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_players
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_players'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_players'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_players
  /users_friends:
    get:
      tags:
      - users_friends
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_friends'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_friends'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_friends'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_friends'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_friends
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_friends
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_friends'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_friends'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_friends'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_friends'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_friends
    delete:
      tags:
      - users_friends
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_friends
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_friends
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_friends'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_friends'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_friends'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_friends'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_friends
  /category_threads:
    get:
      tags:
      - category_threads
      parameters:
      - name: category_id
        in: query
        schema:
          type: string
          format: integer
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category_threads'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category_threads'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category_threads'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category_threads'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - category_threads
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: category_threads
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category_threads'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/category_threads'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/category_threads'
          text/csv:
            schema:
              $ref: '#/components/schemas/category_threads'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: category_threads
    delete:
      tags:
      - category_threads
      parameters:
      - name: category_id
        in: query
        schema:
          type: string
          format: integer
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - category_threads
      parameters:
      - name: category_id
        in: query
        schema:
          type: string
          format: integer
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: category_threads
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category_threads'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/category_threads'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/category_threads'
          text/csv:
            schema:
              $ref: '#/components/schemas/category_threads'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: category_threads
  /SOCIAL:
    get:
      tags:
      - SOCIAL
      parameters:
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: VK_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: TELEGRAM_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: DISCORD_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: BLOCKED
        in: query
        schema:
          type: string
          format: boolean
      - name: TOTP_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: NOTIFY_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SOCIAL'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SOCIAL'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SOCIAL'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SOCIAL'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - SOCIAL
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: SOCIAL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          text/csv:
            schema:
              $ref: '#/components/schemas/SOCIAL'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: SOCIAL
    delete:
      tags:
      - SOCIAL
      parameters:
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: VK_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: TELEGRAM_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: DISCORD_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: BLOCKED
        in: query
        schema:
          type: string
          format: boolean
      - name: TOTP_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: NOTIFY_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - SOCIAL
      parameters:
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: VK_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: TELEGRAM_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: DISCORD_ID
        in: query
        schema:
          type: string
          format: bigint
      - name: BLOCKED
        in: query
        schema:
          type: string
          format: boolean
      - name: TOTP_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: NOTIFY_ENABLED
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: SOCIAL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/SOCIAL'
          text/csv:
            schema:
              $ref: '#/components/schemas/SOCIAL'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: SOCIAL
  /p_comments:
    get:
      tags:
      - p_comments
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/p_comments'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/p_comments'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/p_comments'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/p_comments'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - p_comments
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: p_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/p_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/p_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/p_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/p_comments'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: p_comments
    delete:
      tags:
      - p_comments
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - p_comments
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: p_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/p_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/p_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/p_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/p_comments'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: p_comments
  /threads_images:
    get:
      tags:
      - threads_images
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: images
        in: query
        schema:
          type: string
          format: "text[]"
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_images'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_images'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_images'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_images'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_images
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_images
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_images'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_images'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_images'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_images'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_images
    delete:
      tags:
      - threads_images
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: images
        in: query
        schema:
          type: string
          format: "text[]"
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_images
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: images
        in: query
        schema:
          type: string
          format: "text[]"
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_images
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_images'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_images'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_images'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_images'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_images
  /config_advertisement:
    get:
      tags:
      - config_advertisement
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: owner
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_advertisement'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_advertisement'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_advertisement'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_advertisement'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - config_advertisement
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: config_advertisement
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_advertisement'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: config_advertisement
    delete:
      tags:
      - config_advertisement
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: owner
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - config_advertisement
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: owner
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: config_advertisement
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_advertisement'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_advertisement'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: config_advertisement
  /posts_users:
    get:
      tags:
      - posts_users
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_users'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_users'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_users'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts_users'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - posts_users
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: posts_users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts_users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts_users'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts_users'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: posts_users
    delete:
      tags:
      - posts_users
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - posts_users
      parameters:
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: posts_users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts_users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts_users'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts_users'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: posts_users
  /config_minecraft_items:
    get:
      tags:
      - config_minecraft_items
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: image
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_items'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_items'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_items'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_items'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - config_minecraft_items
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: config_minecraft_items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: config_minecraft_items
    delete:
      tags:
      - config_minecraft_items
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: image
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - config_minecraft_items
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: image
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: config_minecraft_items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_minecraft_items'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: config_minecraft_items
  /threads_users:
    get:
      tags:
      - threads_users
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_users'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_users'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_users'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_users'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_users
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_users'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_users'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_users
    delete:
      tags:
      - threads_users
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_users
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_users'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_users'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_users
  /config_minecraft_facts:
    get:
      tags:
      - config_minecraft_facts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: fact
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_facts'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_facts'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_facts'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_minecraft_facts'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - config_minecraft_facts
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: config_minecraft_facts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: config_minecraft_facts
    delete:
      tags:
      - config_minecraft_facts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: fact
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - config_minecraft_facts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: fact
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: config_minecraft_facts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_minecraft_facts'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: config_minecraft_facts
  /info_findout:
    get:
      tags:
      - info_findout
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: findout
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/info_findout'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/info_findout'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/info_findout'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/info_findout'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - info_findout
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: info_findout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/info_findout'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/info_findout'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/info_findout'
          text/csv:
            schema:
              $ref: '#/components/schemas/info_findout'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: info_findout
    delete:
      tags:
      - info_findout
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: findout
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - info_findout
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: findout
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: info_findout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/info_findout'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/info_findout'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/info_findout'
          text/csv:
            schema:
              $ref: '#/components/schemas/info_findout'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: info_findout
  /luckperms_actions:
    get:
      tags:
      - luckperms_actions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: time
        in: query
        schema:
          type: string
          format: bigint
      - name: actor_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: actor_name
        in: query
        schema:
          type: string
          format: character varying
      - name: type
        in: query
        schema:
          type: string
          format: character
      - name: acted_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: acted_name
        in: query
        schema:
          type: string
          format: character varying
      - name: action
        in: query
        schema:
          type: string
          format: character varying
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_actions'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_actions'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_actions'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_actions'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_actions
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_actions
    delete:
      tags:
      - luckperms_actions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: time
        in: query
        schema:
          type: string
          format: bigint
      - name: actor_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: actor_name
        in: query
        schema:
          type: string
          format: character varying
      - name: type
        in: query
        schema:
          type: string
          format: character
      - name: acted_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: acted_name
        in: query
        schema:
          type: string
          format: character varying
      - name: action
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_actions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: time
        in: query
        schema:
          type: string
          format: bigint
      - name: actor_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: actor_name
        in: query
        schema:
          type: string
          format: character varying
      - name: type
        in: query
        schema:
          type: string
          format: character
      - name: acted_uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: acted_name
        in: query
        schema:
          type: string
          format: character varying
      - name: action
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_actions'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_actions
  /threads_pinned:
    get:
      tags:
      - threads_pinned
      parameters:
      - name: threads_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_pinned'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_pinned'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_pinned'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_pinned'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_pinned
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_pinned
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_pinned'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_pinned
    delete:
      tags:
      - threads_pinned
      parameters:
      - name: threads_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_pinned
      parameters:
      - name: threads_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_pinned
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_pinned'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_pinned'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_pinned
  /users_session:
    get:
      tags:
      - users_session
      parameters:
      - name: expires_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: ua
        in: query
        schema:
          type: string
          format: text
      - name: browser
        in: query
        schema:
          type: string
          format: text
      - name: os
        in: query
        schema:
          type: string
          format: text
      - name: cpu
        in: query
        schema:
          type: string
          format: text
      - name: isBot
        in: query
        schema:
          type: string
          format: boolean
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: ip
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_session'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_session'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_session'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_session'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_session
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_session'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_session'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_session'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_session'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_session
    delete:
      tags:
      - users_session
      parameters:
      - name: expires_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: ua
        in: query
        schema:
          type: string
          format: text
      - name: browser
        in: query
        schema:
          type: string
          format: text
      - name: os
        in: query
        schema:
          type: string
          format: text
      - name: cpu
        in: query
        schema:
          type: string
          format: text
      - name: isBot
        in: query
        schema:
          type: string
          format: boolean
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: ip
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_session
      parameters:
      - name: expires_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: ua
        in: query
        schema:
          type: string
          format: text
      - name: browser
        in: query
        schema:
          type: string
          format: text
      - name: os
        in: query
        schema:
          type: string
          format: text
      - name: cpu
        in: query
        schema:
          type: string
          format: text
      - name: isBot
        in: query
        schema:
          type: string
          format: boolean
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: ip
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_session'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_session'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_session'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_session'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_session
  /luckperms_user_permissions:
    get:
      tags:
      - luckperms_user_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_user_permissions'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_user_permissions'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_user_permissions'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_user_permissions'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_user_permissions
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_user_permissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_user_permissions
    delete:
      tags:
      - luckperms_user_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_user_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: uuid
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_user_permissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_user_permissions'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_user_permissions
  /users_settings:
    get:
      tags:
      - users_settings
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_settings'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_settings'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_settings'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_settings'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_settings
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_settings'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_settings'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_settings'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_settings'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_settings
    delete:
      tags:
      - users_settings
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_settings
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_settings'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_settings'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_settings'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_settings'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_settings
  /luckperms_group_permissions:
    get:
      tags:
      - luckperms_group_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_group_permissions'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_group_permissions'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_group_permissions'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_group_permissions'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_group_permissions
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_group_permissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_group_permissions
    delete:
      tags:
      - luckperms_group_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_group_permissions
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: integer
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: permission
        in: query
        schema:
          type: string
          format: character varying
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: server
        in: query
        schema:
          type: string
          format: character varying
      - name: world
        in: query
        schema:
          type: string
          format: character varying
      - name: expiry
        in: query
        schema:
          type: string
          format: bigint
      - name: contexts
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_group_permissions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_group_permissions'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_group_permissions
  /threads_comments:
    get:
      tags:
      - threads_comments
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_comments'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_comments'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_comments'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_comments'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_comments
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_comments'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_comments
    delete:
      tags:
      - threads_comments
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_comments
      parameters:
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_comments'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_comments
  /users_security:
    get:
      tags:
      - users_security
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: email
        in: query
        schema:
          type: string
          format: text
      - name: token
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_security'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_security'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_security'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_security'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_security
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_security
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_security'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_security'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_security'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_security'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_security
    delete:
      tags:
      - users_security
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: email
        in: query
        schema:
          type: string
          format: text
      - name: token
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_security
      parameters:
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: email
        in: query
        schema:
          type: string
          format: text
      - name: token
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_security
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_security'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_security'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_security'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_security'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_security
  /reports:
    get:
      tags:
      - reports
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: reported_item
        in: query
        schema:
          type: string
          format: json
      - name: reason
        in: query
        schema:
          type: string
          format: public.report_reason
      - name: target_user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: report_type
        in: query
        schema:
          type: string
          format: public.report_type
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reports'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reports'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reports'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reports'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - reports
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: reports
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reports'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/reports'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/reports'
          text/csv:
            schema:
              $ref: '#/components/schemas/reports'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: reports
    delete:
      tags:
      - reports
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: reported_item
        in: query
        schema:
          type: string
          format: json
      - name: reason
        in: query
        schema:
          type: string
          format: public.report_reason
      - name: target_user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: report_type
        in: query
        schema:
          type: string
          format: public.report_type
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - reports
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: reported_item
        in: query
        schema:
          type: string
          format: json
      - name: reason
        in: query
        schema:
          type: string
          format: public.report_reason
      - name: target_user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: report_type
        in: query
        schema:
          type: string
          format: public.report_type
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: reports
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reports'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/reports'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/reports'
          text/csv:
            schema:
              $ref: '#/components/schemas/reports'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: reports
  /AUTH:
    get:
      tags:
      - AUTH
      parameters:
      - name: NICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: HASH
        in: query
        schema:
          type: string
          format: character varying
      - name: IP
        in: query
        schema:
          type: string
          format: character varying
      - name: TOTPTOKEN
        in: query
        schema:
          type: string
          format: character varying
      - name: REGDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: UUID
        in: query
        schema:
          type: string
          format: character varying
      - name: PREMIUMUUID
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINIP
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: ISSUEDTIME
        in: query
        schema:
          type: string
          format: bigint
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AUTH'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AUTH'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AUTH'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AUTH'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - AUTH
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: AUTH
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AUTH'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/AUTH'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/AUTH'
          text/csv:
            schema:
              $ref: '#/components/schemas/AUTH'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: AUTH
    delete:
      tags:
      - AUTH
      parameters:
      - name: NICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: HASH
        in: query
        schema:
          type: string
          format: character varying
      - name: IP
        in: query
        schema:
          type: string
          format: character varying
      - name: TOTPTOKEN
        in: query
        schema:
          type: string
          format: character varying
      - name: REGDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: UUID
        in: query
        schema:
          type: string
          format: character varying
      - name: PREMIUMUUID
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINIP
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: ISSUEDTIME
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - AUTH
      parameters:
      - name: NICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: LOWERCASENICKNAME
        in: query
        schema:
          type: string
          format: character varying
      - name: HASH
        in: query
        schema:
          type: string
          format: character varying
      - name: IP
        in: query
        schema:
          type: string
          format: character varying
      - name: TOTPTOKEN
        in: query
        schema:
          type: string
          format: character varying
      - name: REGDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: UUID
        in: query
        schema:
          type: string
          format: character varying
      - name: PREMIUMUUID
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINIP
        in: query
        schema:
          type: string
          format: character varying
      - name: LOGINDATE
        in: query
        schema:
          type: string
          format: bigint
      - name: ISSUEDTIME
        in: query
        schema:
          type: string
          format: bigint
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: AUTH
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AUTH'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/AUTH'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/AUTH'
          text/csv:
            schema:
              $ref: '#/components/schemas/AUTH'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: AUTH
  /users_blocked:
    get:
      tags:
      - users_blocked
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_blocked'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_blocked'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_blocked'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users_blocked'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users_blocked
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users_blocked
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_blocked'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_blocked'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_blocked'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_blocked'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users_blocked
    delete:
      tags:
      - users_blocked
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users_blocked
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: user_1
        in: query
        schema:
          type: string
          format: text
      - name: user_2
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users_blocked
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_blocked'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users_blocked'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users_blocked'
          text/csv:
            schema:
              $ref: '#/components/schemas/users_blocked'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users_blocked
  /category:
    get:
      tags:
      - category
      parameters:
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: available
        in: query
        schema:
          type: string
          format: boolean
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - category
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/category'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/category'
          text/csv:
            schema:
              $ref: '#/components/schemas/category'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: category
    delete:
      tags:
      - category
      parameters:
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: available
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - category
      parameters:
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: available
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/category'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/category'
          text/csv:
            schema:
              $ref: '#/components/schemas/category'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: category
  /users:
    get:
      tags:
      - users
      parameters:
      - name: acceptrules
        in: query
        schema:
          type: string
          format: boolean
      - name: birthday
        in: query
        schema:
          type: string
          format: date
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: nickname
        in: query
        schema:
          type: string
          format: text
      - name: status
        in: query
        schema:
          type: string
          format: text
      - name: uuid
        in: query
        schema:
          type: string
          format: text
      - name: cover_image
        in: query
        schema:
          type: string
          format: text
      - name: name_color
        in: query
        schema:
          type: string
          format: text
      - name: visibility
        in: query
        schema:
          type: string
          format: public.profile_visibility
      - name: real_name
        in: query
        schema:
          type: string
          format: text
      - name: preferences
        in: query
        schema:
          type: string
          format: jsonb
      - name: favorite_item
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - users
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users'
          text/csv:
            schema:
              $ref: '#/components/schemas/users'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: users
    delete:
      tags:
      - users
      parameters:
      - name: acceptrules
        in: query
        schema:
          type: string
          format: boolean
      - name: birthday
        in: query
        schema:
          type: string
          format: date
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: nickname
        in: query
        schema:
          type: string
          format: text
      - name: status
        in: query
        schema:
          type: string
          format: text
      - name: uuid
        in: query
        schema:
          type: string
          format: text
      - name: cover_image
        in: query
        schema:
          type: string
          format: text
      - name: name_color
        in: query
        schema:
          type: string
          format: text
      - name: visibility
        in: query
        schema:
          type: string
          format: public.profile_visibility
      - name: real_name
        in: query
        schema:
          type: string
          format: text
      - name: preferences
        in: query
        schema:
          type: string
          format: jsonb
      - name: favorite_item
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - users
      parameters:
      - name: acceptrules
        in: query
        schema:
          type: string
          format: boolean
      - name: birthday
        in: query
        schema:
          type: string
          format: date
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: id
        in: query
        schema:
          type: string
          format: text
      - name: nickname
        in: query
        schema:
          type: string
          format: text
      - name: status
        in: query
        schema:
          type: string
          format: text
      - name: uuid
        in: query
        schema:
          type: string
          format: text
      - name: cover_image
        in: query
        schema:
          type: string
          format: text
      - name: name_color
        in: query
        schema:
          type: string
          format: text
      - name: visibility
        in: query
        schema:
          type: string
          format: public.profile_visibility
      - name: real_name
        in: query
        schema:
          type: string
          format: text
      - name: preferences
        in: query
        schema:
          type: string
          format: jsonb
      - name: favorite_item
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/users'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/users'
          text/csv:
            schema:
              $ref: '#/components/schemas/users'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: users
  /threads:
    get:
      tags:
      - threads
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: permission
        in: query
        schema:
          type: string
          format: boolean
      - name: auto_remove
        in: query
        schema:
          type: string
          format: boolean
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: jsonb
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads
    delete:
      tags:
      - threads
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: permission
        in: query
        schema:
          type: string
          format: boolean
      - name: auto_remove
        in: query
        schema:
          type: string
          format: boolean
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: jsonb
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp without time zone
      - name: description
        in: query
        schema:
          type: string
          format: text
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: permission
        in: query
        schema:
          type: string
          format: boolean
      - name: auto_remove
        in: query
        schema:
          type: string
          format: boolean
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: jsonb
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads
  /friends_requests:
    get:
      tags:
      - friends_requests
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: recipient
        in: query
        schema:
          type: string
          format: text
      - name: initiator
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/friends_requests'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/friends_requests'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/friends_requests'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/friends_requests'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - friends_requests
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: friends_requests
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/friends_requests'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/friends_requests'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/friends_requests'
          text/csv:
            schema:
              $ref: '#/components/schemas/friends_requests'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: friends_requests
    delete:
      tags:
      - friends_requests
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: recipient
        in: query
        schema:
          type: string
          format: text
      - name: initiator
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - friends_requests
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: recipient
        in: query
        schema:
          type: string
          format: text
      - name: initiator
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: friends_requests
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/friends_requests'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/friends_requests'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/friends_requests'
          text/csv:
            schema:
              $ref: '#/components/schemas/friends_requests'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: friends_requests
  /config_alerts:
    get:
      tags:
      - config_alerts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_alerts'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_alerts'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_alerts'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/config_alerts'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - config_alerts
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: config_alerts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_alerts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_alerts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_alerts'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_alerts'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: config_alerts
    delete:
      tags:
      - config_alerts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - config_alerts
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: title
        in: query
        schema:
          type: string
          format: text
      - name: link
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: config_alerts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_alerts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/config_alerts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/config_alerts'
          text/csv:
            schema:
              $ref: '#/components/schemas/config_alerts'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: config_alerts
  /t_comments_replies:
    get:
      tags:
      - t_comments_replies
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: initiator_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: recipient_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments_replies'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments_replies'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments_replies'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments_replies'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - t_comments_replies
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: t_comments_replies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          text/csv:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: t_comments_replies
    delete:
      tags:
      - t_comments_replies
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: initiator_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: recipient_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - t_comments_replies
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: initiator_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: recipient_comment_id
        in: query
        schema:
          type: string
          format: uuid
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: t_comments_replies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
          text/csv:
            schema:
              $ref: '#/components/schemas/t_comments_replies'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: t_comments_replies
  /status:
    get:
      tags:
      - status
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - status
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/status'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/status'
          text/csv:
            schema:
              $ref: '#/components/schemas/status'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: status
    delete:
      tags:
      - status
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - status
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: value
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/status'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/status'
          text/csv:
            schema:
              $ref: '#/components/schemas/status'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: status
  /admins:
    get:
      tags:
      - admins
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: admin_id
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/admins'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/admins'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/admins'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/admins'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - admins
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: admins
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/admins'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/admins'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/admins'
          text/csv:
            schema:
              $ref: '#/components/schemas/admins'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: admins
    delete:
      tags:
      - admins
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: admin_id
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - admins
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: admin_id
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: admins
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/admins'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/admins'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/admins'
          text/csv:
            schema:
              $ref: '#/components/schemas/admins'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: admins
  /t_comments:
    get:
      tags:
      - t_comments
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/t_comments'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - t_comments
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: t_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/t_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/t_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/t_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/t_comments'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: t_comments
    delete:
      tags:
      - t_comments
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - t_comments
      parameters:
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: user_nickname
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: t_comments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/t_comments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/t_comments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/t_comments'
          text/csv:
            schema:
              $ref: '#/components/schemas/t_comments'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: t_comments
  /posts:
    get:
      tags:
      - posts
      parameters:
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: visibility
        in: query
        schema:
          type: string
          format: public.post_visibility
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/posts'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - posts
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: posts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: posts
    delete:
      tags:
      - posts
      parameters:
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: visibility
        in: query
        schema:
          type: string
          format: public.post_visibility
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - posts
      parameters:
      - name: content
        in: query
        schema:
          type: string
          format: text
      - name: post_id
        in: query
        schema:
          type: string
          format: uuid
      - name: visibility
        in: query
        schema:
          type: string
          format: public.post_visibility
      - name: created_at
        in: query
        schema:
          type: string
          format: timestamp with time zone
      - name: comments
        in: query
        schema:
          type: string
          format: boolean
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: posts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/posts'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/posts'
          text/csv:
            schema:
              $ref: '#/components/schemas/posts'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: posts
  /threads_tags:
    get:
      tags:
      - threads_tags
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: tags
        in: query
        schema:
          type: string
          format: "jsonb[]"
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_tags'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_tags'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_tags'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_tags'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_tags
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_tags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_tags'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_tags'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_tags'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_tags'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_tags
    delete:
      tags:
      - threads_tags
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: tags
        in: query
        schema:
          type: string
          format: "jsonb[]"
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_tags
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: tags
        in: query
        schema:
          type: string
          format: "jsonb[]"
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_tags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_tags'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_tags'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_tags'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_tags'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_tags
  /threads_rating:
    get:
      tags:
      - threads_rating
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: type
        in: query
        schema:
          type: string
          format: public.thread_rating_type
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_rating'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_rating'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_rating'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/threads_rating'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - threads_rating
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: threads_rating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_rating'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_rating'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_rating'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_rating'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: threads_rating
    delete:
      tags:
      - threads_rating
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: type
        in: query
        schema:
          type: string
          format: public.thread_rating_type
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - threads_rating
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: bigint
      - name: user_id
        in: query
        schema:
          type: string
          format: text
      - name: thread_id
        in: query
        schema:
          type: string
          format: uuid
      - name: type
        in: query
        schema:
          type: string
          format: public.thread_rating_type
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: threads_rating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threads_rating'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/threads_rating'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/threads_rating'
          text/csv:
            schema:
              $ref: '#/components/schemas/threads_rating'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: threads_rating
  /luckperms_tracks:
    get:
      tags:
      - luckperms_tracks
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: groups
        in: query
        schema:
          type: string
          format: text
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_tracks'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_tracks'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_tracks'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_tracks'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_tracks
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_tracks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_tracks
    delete:
      tags:
      - luckperms_tracks
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: groups
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_tracks
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: groups
        in: query
        schema:
          type: string
          format: text
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_tracks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_tracks'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_tracks
  /luckperms_groups:
    get:
      tags:
      - luckperms_groups
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_groups'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_groups'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_groups'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/luckperms_groups'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - luckperms_groups
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: luckperms_groups
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: luckperms_groups
    delete:
      tags:
      - luckperms_groups
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - luckperms_groups
      parameters:
      - name: name
        in: query
        schema:
          type: string
          format: character varying
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: luckperms_groups
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
          text/csv:
            schema:
              $ref: '#/components/schemas/luckperms_groups'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: luckperms_groups
  /rpc/update_value_with_delay:
    get:
      tags:
      - (rpc) update_value_with_delay
      parameters:
      - name: p_user_id
        in: query
        required: true
        schema:
          type: string
          format: text
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) update_value_with_delay
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              required:
              - p_user_id
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              required:
              - p_user_id
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
          application/vnd.pgrst.object+json:
            schema:
              required:
              - p_user_id
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
          text/csv:
            schema:
              required:
              - p_user_id
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
  /rpc/http_post_with_auth:
    get:
      tags:
      - (rpc) http_post_with_auth
      parameters:
      - name: url_address
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: post_data
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: bearer
        in: query
        required: true
        schema:
          type: string
          format: text
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) http_post_with_auth
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              required:
              - bearer
              - post_data
              - url_address
              type: object
              properties:
                bearer:
                  type: string
                  format: text
                post_data:
                  type: string
                  format: text
                url_address:
                  type: string
                  format: text
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              required:
              - bearer
              - post_data
              - url_address
              type: object
              properties:
                bearer:
                  type: string
                  format: text
                post_data:
                  type: string
                  format: text
                url_address:
                  type: string
                  format: text
          application/vnd.pgrst.object+json:
            schema:
              required:
              - bearer
              - post_data
              - url_address
              type: object
              properties:
                bearer:
                  type: string
                  format: text
                post_data:
                  type: string
                  format: text
                url_address:
                  type: string
                  format: text
          text/csv:
            schema:
              required:
              - bearer
              - post_data
              - url_address
              type: object
              properties:
                bearer:
                  type: string
                  format: text
                post_data:
                  type: string
                  format: text
                url_address:
                  type: string
                  format: text
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
  /rpc/set_status:
    get:
      tags:
      - (rpc) set_status
      parameters:
      - name: p_user_id
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: p_value
        in: query
        required: true
        schema:
          type: boolean
          format: boolean
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) set_status
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              required:
              - p_user_id
              - p_value
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
                p_value:
                  type: boolean
                  format: boolean
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              required:
              - p_user_id
              - p_value
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
                p_value:
                  type: boolean
                  format: boolean
          application/vnd.pgrst.object+json:
            schema:
              required:
              - p_user_id
              - p_value
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
                p_value:
                  type: boolean
                  format: boolean
          text/csv:
            schema:
              required:
              - p_user_id
              - p_value
              type: object
              properties:
                p_user_id:
                  type: string
                  format: text
                p_value:
                  type: boolean
                  format: boolean
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
  /rpc/edge_wrapper:
    get:
      tags:
      - (rpc) edge_wrapper
      parameters:
      - name: database
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: table_name
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: nickname
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: uuid
        in: query
        required: true
        schema:
          type: string
          format: text
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) edge_wrapper
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              required:
              - database
              - nickname
              - table_name
              - uuid
              type: object
              properties:
                database:
                  type: string
                  format: text
                nickname:
                  type: string
                  format: text
                table_name:
                  type: string
                  format: text
                uuid:
                  type: string
                  format: text
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              required:
              - database
              - nickname
              - table_name
              - uuid
              type: object
              properties:
                database:
                  type: string
                  format: text
                nickname:
                  type: string
                  format: text
                table_name:
                  type: string
                  format: text
                uuid:
                  type: string
                  format: text
          application/vnd.pgrst.object+json:
            schema:
              required:
              - database
              - nickname
              - table_name
              - uuid
              type: object
              properties:
                database:
                  type: string
                  format: text
                nickname:
                  type: string
                  format: text
                table_name:
                  type: string
                  format: text
                uuid:
                  type: string
                  format: text
          text/csv:
            schema:
              required:
              - database
              - nickname
              - table_name
              - uuid
              type: object
              properties:
                database:
                  type: string
                  format: text
                nickname:
                  type: string
                  format: text
                table_name:
                  type: string
                  format: text
                uuid:
                  type: string
                  format: text
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
  /rpc/check_and_insert_user:
    get:
      tags:
      - (rpc) check_and_insert_user
      parameters:
      - name: nick
        in: query
        required: true
        schema:
          type: string
          format: text
      - name: pass
        in: query
        required: true
        schema:
          type: string
          format: text
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) check_and_insert_user
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              required:
              - nick
              - pass
              type: object
              properties:
                nick:
                  type: string
                  format: text
                pass:
                  type: string
                  format: text
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              required:
              - nick
              - pass
              type: object
              properties:
                nick:
                  type: string
                  format: text
                pass:
                  type: string
                  format: text
          application/vnd.pgrst.object+json:
            schema:
              required:
              - nick
              - pass
              type: object
              properties:
                nick:
                  type: string
                  format: text
                pass:
                  type: string
                  format: text
          text/csv:
            schema:
              required:
              - nick
              - pass
              type: object
              properties:
                nick:
                  type: string
                  format: text
                pass:
                  type: string
                  format: text
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
components:
  schemas:
    posts_comments:
      required:
      - comment_id
      - id
      - post_id
      type: object
      properties:
        post_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `posts.post_id`.<fk table='posts' column='post_id'/>
          format: uuid
        comment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `p_comments.id`.<fk table='p_comments' column='id'/>
          format: uuid
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
    users_status:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        status:
          type: boolean
          format: boolean
        user:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
          format: text
    luckperms_players:
      required:
      - primary_group
      - username
      - uuid
      type: object
      properties:
        uuid:
          maxLength: 36
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: character varying
        username:
          maxLength: 16
          type: string
          format: character varying
        primary_group:
          maxLength: 36
          type: string
          format: character varying
    users_friends:
      required:
      - created_at
      - id
      - user_1
      - user_2
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        user_1:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
        user_2:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    category_threads:
      required:
      - category_id
      - thread_id
      type: object
      properties:
        category_id:
          type: integer
          description: |-
            Note:
            This is a Foreign Key to `category.id`.<fk table='category' column='id'/>
          format: integer
        thread_id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
    SOCIAL:
      required:
      - LOWERCASENICKNAME
      type: object
      properties:
        LOWERCASENICKNAME:
          maxLength: 255
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: character varying
        VK_ID:
          type: integer
          format: bigint
        TELEGRAM_ID:
          type: integer
          format: bigint
        DISCORD_ID:
          type: integer
          format: bigint
        BLOCKED:
          type: boolean
          format: boolean
        TOTP_ENABLED:
          type: boolean
          format: boolean
        NOTIFY_ENABLED:
          type: boolean
          format: boolean
    p_comments:
      required:
      - content
      - created_at
      - id
      - user_nickname
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        content:
          type: string
          format: text
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    threads_images:
      required:
      - id
      - images
      - thread_id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        thread_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `threads.id`.<fk table='threads' column='id'/>
          format: uuid
        images:
          type: array
          items:
            type: string
    config_advertisement:
      required:
      - created_at
      - description
      - id
      - owner
      - title
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        title:
          type: string
          format: text
        description:
          type: string
          format: text
        link:
          type: string
          format: text
        owner:
          type: string
          format: text
    posts_users:
      required:
      - post_id
      - user_nickname
      type: object
      properties:
        post_id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    config_minecraft_items:
      required:
      - id
      - image
      - title
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        title:
          type: string
          format: text
        image:
          type: string
          format: text
    threads_users:
      required:
      - thread_id
      - user_nickname
      type: object
      properties:
        thread_id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    config_minecraft_facts:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        fact:
          type: string
          format: text
    info_findout:
      required:
      - id
      - user_nickname
      type: object
      properties:
        user_nickname:
          type: string
          format: text
        findout:
          type: string
          format: text
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
    luckperms_actions:
      required:
      - acted_name
      - acted_uuid
      - action
      - actor_name
      - actor_uuid
      - id
      - time
      - type
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: integer
        time:
          type: integer
          format: bigint
        actor_uuid:
          maxLength: 36
          type: string
          format: character varying
        actor_name:
          maxLength: 100
          type: string
          format: character varying
        type:
          maxLength: 1
          type: string
          format: character
        acted_uuid:
          maxLength: 36
          type: string
          format: character varying
        acted_name:
          maxLength: 36
          type: string
          format: character varying
        action:
          maxLength: 300
          type: string
          format: character varying
    threads_pinned:
      required:
      - id
      - threads_id
      type: object
      properties:
        threads_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `threads.id`.<fk table='threads' column='id'/>
          format: uuid
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
    users_session:
      required:
      - created_at
      - expires_at
      - id
      - user_id
      type: object
      properties:
        expires_at:
          type: string
          format: timestamp without time zone
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: text
        user_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
          format: text
        ua:
          type: string
          format: text
        browser:
          type: string
          format: text
        os:
          type: string
          format: text
        cpu:
          type: string
          format: text
        isBot:
          type: boolean
          format: boolean
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        ip:
          type: string
          format: text
    luckperms_user_permissions:
      required:
      - contexts
      - expiry
      - id
      - permission
      - server
      - uuid
      - value
      - world
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: integer
        uuid:
          maxLength: 36
          type: string
          format: character varying
        permission:
          maxLength: 200
          type: string
          format: character varying
        value:
          type: boolean
          format: boolean
        server:
          maxLength: 36
          type: string
          format: character varying
        world:
          maxLength: 64
          type: string
          format: character varying
        expiry:
          type: integer
          format: bigint
        contexts:
          maxLength: 200
          type: string
          format: character varying
    users_settings:
      required:
      - user_id
      type: object
      properties:
        user_id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: text
    luckperms_group_permissions:
      required:
      - contexts
      - expiry
      - id
      - name
      - permission
      - server
      - value
      - world
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: integer
        name:
          maxLength: 36
          type: string
          format: character varying
        permission:
          maxLength: 200
          type: string
          format: character varying
        value:
          type: boolean
          format: boolean
        server:
          maxLength: 36
          type: string
          format: character varying
        world:
          maxLength: 64
          type: string
          format: character varying
        expiry:
          type: integer
          format: bigint
        contexts:
          maxLength: 200
          type: string
          format: character varying
    threads_comments:
      required:
      - comment_id
      - id
      - thread_id
      type: object
      properties:
        thread_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `threads.id`.<fk table='threads' column='id'/>
          format: uuid
        comment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `t_comments.id`.<fk table='t_comments' column='id'/>
          format: uuid
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
    users_security:
      required:
      - email
      - user_nickname
      type: object
      properties:
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: text
        email:
          type: string
          format: text
        token:
          type: string
          format: text
    reports:
      required:
      - created_at
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
        reported_item:
          type: object
          format: json
        reason:
          type: string
          format: public.report_reason
          enum:
          - spam
          - offensive
        target_user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
        report_type:
          type: string
          format: public.report_type
          enum:
          - comment
          - post
          - thread
          - account
    AUTH:
      required:
      - HASH
      - LOWERCASENICKNAME
      - NICKNAME
      type: object
      properties:
        NICKNAME:
          maxLength: 255
          type: string
          format: character varying
        LOWERCASENICKNAME:
          maxLength: 255
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: character varying
        HASH:
          maxLength: 255
          type: string
          format: character varying
        IP:
          maxLength: 255
          type: string
          format: character varying
        TOTPTOKEN:
          maxLength: 255
          type: string
          format: character varying
        REGDATE:
          type: integer
          format: bigint
        UUID:
          maxLength: 255
          type: string
          format: character varying
        PREMIUMUUID:
          maxLength: 255
          type: string
          format: character varying
        LOGINIP:
          maxLength: 255
          type: string
          format: character varying
        LOGINDATE:
          type: integer
          format: bigint
        ISSUEDTIME:
          type: integer
          format: bigint
    users_blocked:
      required:
      - created_at
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        user_1:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
        user_2:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    category:
      required:
      - available
      - id
      - title
      type: object
      properties:
        description:
          type: string
          format: text
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        title:
          type: string
          format: text
        available:
          type: boolean
          format: boolean
          default: true
    users:
      required:
      - created_at
      - id
      - name_color
      - nickname
      - preferences
      - uuid
      - visibility
      type: object
      properties:
        acceptrules:
          type: boolean
          format: boolean
          default: true
        birthday:
          type: string
          format: date
        created_at:
          type: string
          format: timestamp without time zone
          default: CURRENT_TIMESTAMP
        description:
          type: string
          format: text
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: text
          default: gen_random_uuid()
        nickname:
          type: string
          format: text
        status:
          type: string
          format: text
        uuid:
          type: string
          format: text
        cover_image:
          type: string
          format: text
        name_color:
          type: string
          format: text
          default: '#FFFFFF'
        visibility:
          type: string
          format: public.profile_visibility
          default: all
          enum:
          - all
          - friends
        real_name:
          type: string
          format: text
        preferences:
          type: object
          format: jsonb
        favorite_item:
          type: string
          format: text
    threads:
      required:
      - auto_remove
      - comments
      - content
      - created_at
      - id
      - permission
      - title
      type: object
      properties:
        created_at:
          type: string
          format: timestamp without time zone
          default: CURRENT_TIMESTAMP
        description:
          type: string
          format: text
        title:
          type: string
          format: text
        comments:
          type: boolean
          format: boolean
          default: true
        permission:
          type: boolean
          format: boolean
          default: false
        auto_remove:
          type: boolean
          format: boolean
          default: false
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        content:
          type: object
          format: jsonb
    friends_requests:
      required:
      - created_at
      - id
      - initiator
      - recipient
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        recipient:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
        initiator:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    config_alerts:
      required:
      - created_at
      - id
      - title
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        title:
          type: string
          format: text
        link:
          type: string
          format: text
    t_comments_replies:
      required:
      - created_at
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        initiator_comment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `t_comments.id`.<fk table='t_comments' column='id'/>
          format: uuid
        recipient_comment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `t_comments.id`.<fk table='t_comments' column='id'/>
          format: uuid
    status:
      required:
      - user_id
      - value
      type: object
      properties:
        user_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
          format: text
          default: ""
        value:
          type: boolean
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: boolean
          default: false
    admins:
      required:
      - created_at
      - id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        admin_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
          format: text
    t_comments:
      required:
      - content
      - created_at
      - id
      - user_nickname
      type: object
      properties:
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        content:
          type: string
          format: text
        user_nickname:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.nickname`.<fk table='users' column='nickname'/>
          format: text
    posts:
      required:
      - comments
      - created_at
      - post_id
      - visibility
      type: object
      properties:
        content:
          type: string
          format: text
        post_id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        visibility:
          type: string
          format: public.post_visibility
          default: all
          enum:
          - all
          - only
          - friends
        created_at:
          type: string
          format: timestamp with time zone
          default: now()
        comments:
          type: boolean
          format: boolean
          default: true
    threads_tags:
      required:
      - id
      - thread_id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        thread_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `threads.id`.<fk table='threads' column='id'/>
          format: uuid
        tags:
          type: array
          items:
            type: object
    threads_rating:
      required:
      - id
      - thread_id
      - type
      - user_id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: bigint
        user_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
          format: text
        thread_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `threads.id`.<fk table='threads' column='id'/>
          format: uuid
        type:
          type: string
          format: public.thread_rating_type
          enum:
          - decrement
          - increment
    luckperms_tracks:
      required:
      - groups
      - name
      type: object
      properties:
        name:
          maxLength: 36
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: character varying
        groups:
          type: string
          format: text
    luckperms_groups:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 36
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: character varying
  parameters:
    preferParams:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - params=single-object
    preferReturn:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - return=representation
        - return=minimal
        - return=none
    preferCount:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - count=none
    preferPost:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - return=representation
        - return=minimal
        - return=none
        - resolution=ignore-duplicates
        - resolution=merge-duplicates
    select:
      name: select
      in: query
      description: Filtering Columns
      schema:
        type: string
    on_conflict:
      name: on_conflict
      in: query
      description: On Conflict
      schema:
        type: string
    order:
      name: order
      in: query
      description: Ordering
      schema:
        type: string
    range:
      name: Range
      in: header
      description: Limiting and Pagination
      schema:
        type: string
    rangeUnit:
      name: Range-Unit
      in: header
      description: Limiting and Pagination
      schema:
        type: string
        default: items
    offset:
      name: offset
      in: query
      description: Limiting and Pagination
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Limiting and Pagination
      schema:
        type: string
    rowFilter.posts_comments.post_id:
      name: post_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.posts_comments.comment_id:
      name: comment_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.posts_comments.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_status.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_status.status:
      name: status
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.users_status.user:
      name: user
      in: query
      schema:
        type: string
        format: text
    rowFilter.luckperms_players.uuid:
      name: uuid
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_players.username:
      name: username
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_players.primary_group:
      name: primary_group
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.users_friends.id:
      name: id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.users_friends.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.users_friends.user_1:
      name: user_1
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_friends.user_2:
      name: user_2
      in: query
      schema:
        type: string
        format: text
    rowFilter.category_threads.category_id:
      name: category_id
      in: query
      schema:
        type: string
        format: integer
    rowFilter.category_threads.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.SOCIAL.LOWERCASENICKNAME:
      name: LOWERCASENICKNAME
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.SOCIAL.VK_ID:
      name: VK_ID
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.SOCIAL.TELEGRAM_ID:
      name: TELEGRAM_ID
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.SOCIAL.DISCORD_ID:
      name: DISCORD_ID
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.SOCIAL.BLOCKED:
      name: BLOCKED
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.SOCIAL.TOTP_ENABLED:
      name: TOTP_ENABLED
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.SOCIAL.NOTIFY_ENABLED:
      name: NOTIFY_ENABLED
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.p_comments.id:
      name: id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.p_comments.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.p_comments.content:
      name: content
      in: query
      schema:
        type: string
        format: text
    rowFilter.p_comments.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads_images.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.threads_images.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_images.images:
      name: images
      in: query
      schema:
        type: string
        format: "text[]"
    rowFilter.config_advertisement.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.config_advertisement.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.config_advertisement.title:
      name: title
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_advertisement.description:
      name: description
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_advertisement.link:
      name: link
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_advertisement.owner:
      name: owner
      in: query
      schema:
        type: string
        format: text
    rowFilter.posts_users.post_id:
      name: post_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.posts_users.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_minecraft_items.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.config_minecraft_items.title:
      name: title
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_minecraft_items.image:
      name: image
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads_users.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_users.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_minecraft_facts.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.config_minecraft_facts.fact:
      name: fact
      in: query
      schema:
        type: string
        format: text
    rowFilter.info_findout.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.info_findout.findout:
      name: findout
      in: query
      schema:
        type: string
        format: text
    rowFilter.info_findout.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.luckperms_actions.id:
      name: id
      in: query
      schema:
        type: string
        format: integer
    rowFilter.luckperms_actions.time:
      name: time
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.luckperms_actions.actor_uuid:
      name: actor_uuid
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_actions.actor_name:
      name: actor_name
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_actions.type:
      name: type
      in: query
      schema:
        type: string
        format: character
    rowFilter.luckperms_actions.acted_uuid:
      name: acted_uuid
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_actions.acted_name:
      name: acted_name
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_actions.action:
      name: action
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.threads_pinned.threads_id:
      name: threads_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_pinned.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_session.expires_at:
      name: expires_at
      in: query
      schema:
        type: string
        format: timestamp without time zone
    rowFilter.users_session.id:
      name: id
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.user_id:
      name: user_id
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.ua:
      name: ua
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.browser:
      name: browser
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.os:
      name: os
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.cpu:
      name: cpu
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_session.isBot:
      name: isBot
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.users_session.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.users_session.ip:
      name: ip
      in: query
      schema:
        type: string
        format: text
    rowFilter.luckperms_user_permissions.id:
      name: id
      in: query
      schema:
        type: string
        format: integer
    rowFilter.luckperms_user_permissions.uuid:
      name: uuid
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_user_permissions.permission:
      name: permission
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_user_permissions.value:
      name: value
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.luckperms_user_permissions.server:
      name: server
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_user_permissions.world:
      name: world
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_user_permissions.expiry:
      name: expiry
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.luckperms_user_permissions.contexts:
      name: contexts
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.users_settings.user_id:
      name: user_id
      in: query
      schema:
        type: string
        format: text
    rowFilter.luckperms_group_permissions.id:
      name: id
      in: query
      schema:
        type: string
        format: integer
    rowFilter.luckperms_group_permissions.name:
      name: name
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_group_permissions.permission:
      name: permission
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_group_permissions.value:
      name: value
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.luckperms_group_permissions.server:
      name: server
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_group_permissions.world:
      name: world
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_group_permissions.expiry:
      name: expiry
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.luckperms_group_permissions.contexts:
      name: contexts
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.threads_comments.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_comments.comment_id:
      name: comment_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_comments.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_security.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_security.email:
      name: email
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_security.token:
      name: token
      in: query
      schema:
        type: string
        format: text
    rowFilter.reports.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.reports.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.reports.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.reports.reported_item:
      name: reported_item
      in: query
      schema:
        type: string
        format: json
    rowFilter.reports.reason:
      name: reason
      in: query
      schema:
        type: string
        format: public.report_reason
    rowFilter.reports.target_user_nickname:
      name: target_user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.reports.report_type:
      name: report_type
      in: query
      schema:
        type: string
        format: public.report_type
    rowFilter.AUTH.NICKNAME:
      name: NICKNAME
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.LOWERCASENICKNAME:
      name: LOWERCASENICKNAME
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.HASH:
      name: HASH
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.IP:
      name: IP
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.TOTPTOKEN:
      name: TOTPTOKEN
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.REGDATE:
      name: REGDATE
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.AUTH.UUID:
      name: UUID
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.PREMIUMUUID:
      name: PREMIUMUUID
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.LOGINIP:
      name: LOGINIP
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.AUTH.LOGINDATE:
      name: LOGINDATE
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.AUTH.ISSUEDTIME:
      name: ISSUEDTIME
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_blocked.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.users_blocked.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.users_blocked.user_1:
      name: user_1
      in: query
      schema:
        type: string
        format: text
    rowFilter.users_blocked.user_2:
      name: user_2
      in: query
      schema:
        type: string
        format: text
    rowFilter.category.description:
      name: description
      in: query
      schema:
        type: string
        format: text
    rowFilter.category.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.category.title:
      name: title
      in: query
      schema:
        type: string
        format: text
    rowFilter.category.available:
      name: available
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.users.acceptrules:
      name: acceptrules
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.users.birthday:
      name: birthday
      in: query
      schema:
        type: string
        format: date
    rowFilter.users.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp without time zone
    rowFilter.users.description:
      name: description
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.id:
      name: id
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.nickname:
      name: nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.status:
      name: status
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.uuid:
      name: uuid
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.cover_image:
      name: cover_image
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.name_color:
      name: name_color
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.visibility:
      name: visibility
      in: query
      schema:
        type: string
        format: public.profile_visibility
    rowFilter.users.real_name:
      name: real_name
      in: query
      schema:
        type: string
        format: text
    rowFilter.users.preferences:
      name: preferences
      in: query
      schema:
        type: string
        format: jsonb
    rowFilter.users.favorite_item:
      name: favorite_item
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp without time zone
    rowFilter.threads.description:
      name: description
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads.title:
      name: title
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads.comments:
      name: comments
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.threads.permission:
      name: permission
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.threads.auto_remove:
      name: auto_remove
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.threads.id:
      name: id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads.content:
      name: content
      in: query
      schema:
        type: string
        format: jsonb
    rowFilter.friends_requests.id:
      name: id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.friends_requests.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.friends_requests.recipient:
      name: recipient
      in: query
      schema:
        type: string
        format: text
    rowFilter.friends_requests.initiator:
      name: initiator
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_alerts.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.config_alerts.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.config_alerts.title:
      name: title
      in: query
      schema:
        type: string
        format: text
    rowFilter.config_alerts.link:
      name: link
      in: query
      schema:
        type: string
        format: text
    rowFilter.t_comments_replies.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.t_comments_replies.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.t_comments_replies.initiator_comment_id:
      name: initiator_comment_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.t_comments_replies.recipient_comment_id:
      name: recipient_comment_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.status.user_id:
      name: user_id
      in: query
      schema:
        type: string
        format: text
    rowFilter.status.value:
      name: value
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.admins.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.admins.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.admins.admin_id:
      name: admin_id
      in: query
      schema:
        type: string
        format: text
    rowFilter.t_comments.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.t_comments.id:
      name: id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.t_comments.content:
      name: content
      in: query
      schema:
        type: string
        format: text
    rowFilter.t_comments.user_nickname:
      name: user_nickname
      in: query
      schema:
        type: string
        format: text
    rowFilter.posts.content:
      name: content
      in: query
      schema:
        type: string
        format: text
    rowFilter.posts.post_id:
      name: post_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.posts.visibility:
      name: visibility
      in: query
      schema:
        type: string
        format: public.post_visibility
    rowFilter.posts.created_at:
      name: created_at
      in: query
      schema:
        type: string
        format: timestamp with time zone
    rowFilter.posts.comments:
      name: comments
      in: query
      schema:
        type: string
        format: boolean
    rowFilter.threads_tags.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.threads_tags.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_tags.tags:
      name: tags
      in: query
      schema:
        type: string
        format: "jsonb[]"
    rowFilter.threads_rating.id:
      name: id
      in: query
      schema:
        type: string
        format: bigint
    rowFilter.threads_rating.user_id:
      name: user_id
      in: query
      schema:
        type: string
        format: text
    rowFilter.threads_rating.thread_id:
      name: thread_id
      in: query
      schema:
        type: string
        format: uuid
    rowFilter.threads_rating.type:
      name: type
      in: query
      schema:
        type: string
        format: public.thread_rating_type
    rowFilter.luckperms_tracks.name:
      name: name
      in: query
      schema:
        type: string
        format: character varying
    rowFilter.luckperms_tracks.groups:
      name: groups
      in: query
      schema:
        type: string
        format: text
    rowFilter.luckperms_groups.name:
      name: name
      in: query
      schema:
        type: string
        format: character varying
  requestBodies:
    body.posts_comments:
      description: posts_comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/posts_comments'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/posts_comments'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/posts_comments'
        text/csv:
          schema:
            $ref: '#/components/schemas/posts_comments'
      required: false
    body.users_status:
      description: users_status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_status'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_status'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_status'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_status'
      required: false
    body.luckperms_players:
      description: luckperms_players
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_players'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_players'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_players'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_players'
      required: false
    body.users_friends:
      description: users_friends
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_friends'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_friends'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_friends'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_friends'
      required: false
    body.category_threads:
      description: category_threads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/category_threads'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/category_threads'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/category_threads'
        text/csv:
          schema:
            $ref: '#/components/schemas/category_threads'
      required: false
    body.SOCIAL:
      description: SOCIAL
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SOCIAL'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/SOCIAL'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/SOCIAL'
        text/csv:
          schema:
            $ref: '#/components/schemas/SOCIAL'
      required: false
    body.p_comments:
      description: p_comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/p_comments'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/p_comments'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/p_comments'
        text/csv:
          schema:
            $ref: '#/components/schemas/p_comments'
      required: false
    body.threads_images:
      description: threads_images
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_images'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_images'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_images'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_images'
      required: false
    body.config_advertisement:
      description: config_advertisement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/config_advertisement'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/config_advertisement'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/config_advertisement'
        text/csv:
          schema:
            $ref: '#/components/schemas/config_advertisement'
      required: false
    body.posts_users:
      description: posts_users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/posts_users'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/posts_users'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/posts_users'
        text/csv:
          schema:
            $ref: '#/components/schemas/posts_users'
      required: false
    body.config_minecraft_items:
      description: config_minecraft_items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/config_minecraft_items'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/config_minecraft_items'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/config_minecraft_items'
        text/csv:
          schema:
            $ref: '#/components/schemas/config_minecraft_items'
      required: false
    body.threads_users:
      description: threads_users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_users'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_users'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_users'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_users'
      required: false
    body.config_minecraft_facts:
      description: config_minecraft_facts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/config_minecraft_facts'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/config_minecraft_facts'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/config_minecraft_facts'
        text/csv:
          schema:
            $ref: '#/components/schemas/config_minecraft_facts'
      required: false
    body.info_findout:
      description: info_findout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/info_findout'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/info_findout'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/info_findout'
        text/csv:
          schema:
            $ref: '#/components/schemas/info_findout'
      required: false
    body.luckperms_actions:
      description: luckperms_actions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_actions'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_actions'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_actions'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_actions'
      required: false
    body.threads_pinned:
      description: threads_pinned
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_pinned'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_pinned'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_pinned'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_pinned'
      required: false
    body.users_session:
      description: users_session
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_session'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_session'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_session'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_session'
      required: false
    body.luckperms_user_permissions:
      description: luckperms_user_permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_user_permissions'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_user_permissions'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_user_permissions'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_user_permissions'
      required: false
    body.users_settings:
      description: users_settings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_settings'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_settings'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_settings'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_settings'
      required: false
    body.luckperms_group_permissions:
      description: luckperms_group_permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_group_permissions'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_group_permissions'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_group_permissions'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_group_permissions'
      required: false
    body.threads_comments:
      description: threads_comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_comments'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_comments'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_comments'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_comments'
      required: false
    body.users_security:
      description: users_security
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_security'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_security'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_security'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_security'
      required: false
    body.reports:
      description: reports
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reports'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/reports'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/reports'
        text/csv:
          schema:
            $ref: '#/components/schemas/reports'
      required: false
    body.AUTH:
      description: AUTH
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AUTH'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/AUTH'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/AUTH'
        text/csv:
          schema:
            $ref: '#/components/schemas/AUTH'
      required: false
    body.users_blocked:
      description: users_blocked
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_blocked'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users_blocked'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users_blocked'
        text/csv:
          schema:
            $ref: '#/components/schemas/users_blocked'
      required: false
    body.category:
      description: category
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/category'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/category'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/category'
        text/csv:
          schema:
            $ref: '#/components/schemas/category'
      required: false
    body.users:
      description: users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/users'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/users'
        text/csv:
          schema:
            $ref: '#/components/schemas/users'
      required: false
    body.threads:
      description: threads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads'
      required: false
    body.friends_requests:
      description: friends_requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/friends_requests'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/friends_requests'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/friends_requests'
        text/csv:
          schema:
            $ref: '#/components/schemas/friends_requests'
      required: false
    body.config_alerts:
      description: config_alerts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/config_alerts'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/config_alerts'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/config_alerts'
        text/csv:
          schema:
            $ref: '#/components/schemas/config_alerts'
      required: false
    body.t_comments_replies:
      description: t_comments_replies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/t_comments_replies'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/t_comments_replies'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/t_comments_replies'
        text/csv:
          schema:
            $ref: '#/components/schemas/t_comments_replies'
      required: false
    body.status:
      description: status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/status'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/status'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/status'
        text/csv:
          schema:
            $ref: '#/components/schemas/status'
      required: false
    body.admins:
      description: admins
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/admins'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/admins'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/admins'
        text/csv:
          schema:
            $ref: '#/components/schemas/admins'
      required: false
    body.t_comments:
      description: t_comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/t_comments'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/t_comments'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/t_comments'
        text/csv:
          schema:
            $ref: '#/components/schemas/t_comments'
      required: false
    body.posts:
      description: posts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/posts'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/posts'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/posts'
        text/csv:
          schema:
            $ref: '#/components/schemas/posts'
      required: false
    body.threads_tags:
      description: threads_tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_tags'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_tags'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_tags'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_tags'
      required: false
    body.threads_rating:
      description: threads_rating
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threads_rating'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/threads_rating'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/threads_rating'
        text/csv:
          schema:
            $ref: '#/components/schemas/threads_rating'
      required: false
    body.luckperms_tracks:
      description: luckperms_tracks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_tracks'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_tracks'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_tracks'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_tracks'
      required: false
    body.luckperms_groups:
      description: luckperms_groups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/luckperms_groups'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/luckperms_groups'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/luckperms_groups'
        text/csv:
          schema:
            $ref: '#/components/schemas/luckperms_groups'
      required: false
x-original-swagger-version: "2.0"
