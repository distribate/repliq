entryPoints:
  http:
    address: ":80"
  https:
    address: ":443"

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  file:
    filename: /traefik.yml
    watch: true

api:
  dashboard: true
  debug: true

tls:
  certificates:
    - certFile: "/certs/cert.pem"
      keyFile: "/certs/key.pem"

log:
  level: DEBUG
  filePath: "/logs/traefik.log"
  format: common
accessLog:
  filePath: "/logs/access.log"
  bufferingSize: 100

http:
  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: true

    add-storage-prefix-mw:
      addPrefix:
        prefix: "/storage/v1" 

  routers:
    http-catcher:
      rule: "HostRegexp(`{host:.+}`)"
      entryPoints:
        - http
      middlewares:
        - redirect-to-https
      service: noop@internal

    traefik:
      rule: "Host(`traefik.${DOMAIN_NAME}`)"
      entrypoints: [http]
      middlewares:
        - traefik-https-redirect

    traefik-secure: 
      rule: "Host(`traefik.${DOMAIN_NAME}`)"
      entrypoints: [https]
      middlewares: 
        - traefik-auth
      tls: true 
      service: api@internal

    kong:
      rule: "Host(`kong.fasberry.su`)"
      entryPoints: [https]
      tls: true
      service: kong-svc
    static:
      rule: "Host(`static.fasberry.su`)"
      entryPoints: [https]
      tls: true
      middlewares: 
        - add-storage-prefix-mw
      service: noop@internal

    payment:
      rule: "Host(`api.fasberry.su`) && PathPrefix(`/payment`)"
      entryPoints: [https]
      tls: true
      service: api-payment-svc
    minecraft:
      rule: "Host(`api.fasberry.su`) && PathPrefix(`/minecraft`)"
      entryPoints: [https]
      tls: true
      service: api-minecraft-svc
    auth:
      rule: "Host(`api.fasberry.su`) && PathPrefix(`/auth`)"
      entryPoints: [https]
      tls: true
      service: api-auth-svc
    forum:
      rule: "Host(`api.fasberry.su`) && PathPrefix(`/forum`)"
      entryPoints: [https]
      tls: true
      service: api-forum-svc

    hub:
      rule: "Host(`fasberry.su`)"
      entryPoints: [https]
      tls: true
      priority: 1
      service: forum-svc
    minecraft-landing-fasberry:
      rule: "Host(`mc.fasberry.su`)"
      entryPoints: [https]
      tls: true
      service: minecraft-landing-fasberry-svc
    minecraft-fasberry:
      rule: "Host(`mc.fasberry.su`) && PathPrefix(`/player`)"
      entryPoints: [https]
      tls: true
      service: minecraft-fasberry-svc

    archivio:
      rule: "Host(`mvp.fasberry.su`)"
      entryPoints: [https]
      tls: true
      service: archivio-svc

  services:
    kong-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:8000"
    kong-storage-service:
      loadBalancer:
        servers:
          - url: "https://kong.fasberry.su"

    # traefik:
    #   loadbalancer:
    #     server:
    #       - port: 9080

    api-payment-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:4103"
    api-minecraft-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:4102"
    api-auth-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:4100"
    api-forum-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:4101"

    forum-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3000"
    minecraft-landing-fasberry-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3001"
    minecraft-fasberry-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3002"

    archivio-svc:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3006"