/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export interface LuckpermsActions {
  acted_name: string;
  acted_uuid: string;
  action: string;
  actor_name: string;
  actor_uuid: string;
  id: Generated<number>;
  time: Int8;
  type: string;
}

export interface LuckpermsGroupPermissions {
  contexts: string;
  expiry: Int8;
  id: Generated<number>;
  name: string;
  permission: string;
  server: string;
  value: boolean;
  world: string;
}

export interface LuckpermsGroups {
  name: string;
}

export interface LuckpermsPlayers {
  primary_group: string;
  username: string;
  uuid: string;
}

export interface LuckpermsTracks {
  groups: string;
  name: string;
}

export interface LuckpermsUserPermissions {
  contexts: string;
  expiry: Int8;
  id: Generated<number>;
  permission: string;
  server: string;
  uuid: string;
  value: boolean;
  world: string;
}

export interface DB {
  luckperms_actions: LuckpermsActions;
  luckperms_group_permissions: LuckpermsGroupPermissions;
  luckperms_groups: LuckpermsGroups;
  luckperms_players: LuckpermsPlayers;
  luckperms_tracks: LuckpermsTracks;
  luckperms_user_permissions: LuckpermsUserPermissions;
}
