import { loggerBot } from "../../shared/bot/bot.ts"
import { callBroadcast } from "../../utils/call-broadcast.ts"
import { callServerCommand } from "../../utils/call-command.ts"

const weatherTitle: Record<WeatherType, string> = {
  rain: '–¥–æ–∂–¥–ª–∏–≤–∞—è',
  sun: '—Å–æ–ª–Ω–µ—á–Ω–∞—è',
  storm: '—à—Ç–æ—Ä–º–æ–≤–∞—è',
}

const weatherEmojis: Record<WeatherType, string> = {
  rain: 'üåßÔ∏è',
  sun: 'üåû',
  storm: 'üå©Ô∏è',
} as const

type WeatherType = 'rain' | 'sun' | 'storm'

loggerBot.command('weather', async (ctx) => {
  if (!ctx.args) {
    return ctx.send('–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –ø–æ–≥–æ–¥—ã: rain, sun, storm')
  }

  const username = `${ctx.from?.firstName} ${ctx.from?.lastName ?? ''}`

  const arg = ctx.args as WeatherType

  if (arg !== 'rain' && arg !== 'sun' && arg !== 'storm') {
    return ctx.send('–¢–∞–∫–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–≥–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
  }

  const value = `weather ${arg} BisquiteWorld`

  const broadcastMsg = `–Æ–∑–µ—Ä {#FABBFB}${username} {#FFFFFF}(tg) —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø–æ–≥–æ–¥—É ${weatherTitle[arg]}`
  const serverCommandCallbackMsg = `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ ${weatherTitle[arg]}! ${weatherEmojis[arg]}`

  await Promise.all([
    callBroadcast(broadcastMsg),
    callServerCommand({ parent: 'cmi', value }).then(() => {
      ctx.reply(serverCommandCallbackMsg)
    })
  ])
})